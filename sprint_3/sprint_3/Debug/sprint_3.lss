
sprint_3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  00001594  00001628  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001594  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000020c  0080012a  0080012a  00001652  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001652  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016b0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  000016f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000115f  00000000  00000000  000017b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000920  00000000  00000000  00002917  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000089e  00000000  00000000  00003237  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e4  00000000  00000000  00003ad8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000675  00000000  00000000  00003dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000aea  00000000  00000000  00004431  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00004f1b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 24 01 	jmp	0x248	; 0x248 <__ctors_end>
       4:	0c 94 1d 03 	jmp	0x63a	; 0x63a <__vector_1>
       8:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
       c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      10:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      14:	0c 94 b7 03 	jmp	0x76e	; 0x76e <__vector_5>
      18:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      1c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      20:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      24:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      28:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      30:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      34:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      38:	0c 94 c0 02 	jmp	0x580	; 0x580 <__vector_14>
      3c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      40:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      44:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      48:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      50:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      54:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      58:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      5c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      60:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      64:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>

00000068 <CHARSET>:
      68:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
      e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
      f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     1f8:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <__ctors_end>:
     248:	11 24       	eor	r1, r1
     24a:	1f be       	out	0x3f, r1	; 63
     24c:	cf ef       	ldi	r28, 0xFF	; 255
     24e:	d8 e0       	ldi	r29, 0x08	; 8
     250:	de bf       	out	0x3e, r29	; 62
     252:	cd bf       	out	0x3d, r28	; 61

00000254 <__do_copy_data>:
     254:	11 e0       	ldi	r17, 0x01	; 1
     256:	a0 e0       	ldi	r26, 0x00	; 0
     258:	b1 e0       	ldi	r27, 0x01	; 1
     25a:	e4 e9       	ldi	r30, 0x94	; 148
     25c:	f5 e1       	ldi	r31, 0x15	; 21
     25e:	02 c0       	rjmp	.+4      	; 0x264 <__do_copy_data+0x10>
     260:	05 90       	lpm	r0, Z+
     262:	0d 92       	st	X+, r0
     264:	aa 32       	cpi	r26, 0x2A	; 42
     266:	b1 07       	cpc	r27, r17
     268:	d9 f7       	brne	.-10     	; 0x260 <__do_copy_data+0xc>

0000026a <__do_clear_bss>:
     26a:	23 e0       	ldi	r18, 0x03	; 3
     26c:	aa e2       	ldi	r26, 0x2A	; 42
     26e:	b1 e0       	ldi	r27, 0x01	; 1
     270:	01 c0       	rjmp	.+2      	; 0x274 <.do_clear_bss_start>

00000272 <.do_clear_bss_loop>:
     272:	1d 92       	st	X+, r1

00000274 <.do_clear_bss_start>:
     274:	a6 33       	cpi	r26, 0x36	; 54
     276:	b2 07       	cpc	r27, r18
     278:	e1 f7       	brne	.-8      	; 0x272 <.do_clear_bss_loop>
     27a:	0e 94 9f 02 	call	0x53e	; 0x53e <main>
     27e:	0c 94 c8 0a 	jmp	0x1590	; 0x1590 <_exit>

00000282 <__bad_interrupt>:
     282:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000286 <configuracao>:
void configuracao()
{
	//DEFINIÇÃO DA GPIO
	
	//direção dos pinos
	DDRB	|= 0b01111111;	// habilita os pinos PD0..6 como saidas
     286:	84 b1       	in	r24, 0x04	; 4
     288:	8f 67       	ori	r24, 0x7F	; 127
     28a:	84 b9       	out	0x04, r24	; 4
	DDRD	&= 0b11100011;	// habilita os pinos PD2 e PD3 como entradas
     28c:	8a b1       	in	r24, 0x0a	; 10
     28e:	83 7e       	andi	r24, 0xE3	; 227
     290:	8a b9       	out	0x0a, r24	; 10
	
	//pull ups das entradas
	PORTD	= 0b00011100;	// habilita o resistor de Pull-up de PD2..3
     292:	8c e1       	ldi	r24, 0x1C	; 28
     294:	8b b9       	out	0x0b, r24	; 11

	// configuracao das interrupções externas
	EICRA	= 0b00000010; // interrupçõ eternsa INT0 na bord de descida
     296:	82 e0       	ldi	r24, 0x02	; 2
     298:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	EIMSK	= 0b00000001; // habilita a interrupcao externa INT0
     29c:	91 e0       	ldi	r25, 0x01	; 1
     29e:	9d bb       	out	0x1d, r25	; 29
	PCICR	= 0b00000100; // habilita interrupção PIN change 2 (porta D)
     2a0:	94 e0       	ldi	r25, 0x04	; 4
     2a2:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <__TEXT_REGION_LENGTH__+0x7f8068>
	PCMSK2	= 0b00011000; // habilita interrupção PIN chance PD3 e PD4
     2a6:	98 e1       	ldi	r25, 0x18	; 24
     2a8:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <__TEXT_REGION_LENGTH__+0x7f806d>
	
	//configuração do timer 0
	TCCR0A	= 0b00000010;	// habilita modo CTC do TC0
     2ac:	84 bd       	out	0x24, r24	; 36
	TCCR0B	= 0b00000011;	// liga TC0 com prescaler = 64
     2ae:	93 e0       	ldi	r25, 0x03	; 3
     2b0:	95 bd       	out	0x25, r25	; 37
	OCR0A	= 249;			// ajusta o comparador para TC0 contar ate 249.
     2b2:	99 ef       	ldi	r25, 0xF9	; 249
     2b4:	97 bd       	out	0x27, r25	; 39
	TIMSK0	= 0b00000010;	// habilita a iinterrupcao na igualdade de comparacao com OCR0A a cada 1ms = (249 + 1)*64/16MHz
     2b6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>

	sei();
     2ba:	78 94       	sei
     2bc:	08 95       	ret

000002be <anima_velocidade>:
		anima_LCD(Diametro_pneu_cm, RPM_motor, Distancia_hodometro_km, &flag_500ms);
	}
}

void anima_velocidade(uint16_t velocidade_carro, uint8_t *flag_disparo)
{
     2be:	cf 93       	push	r28
     2c0:	ac 01       	movw	r20, r24
     2c2:	fb 01       	movw	r30, r22
	static int8_t cont_dig = 0;
	if(*flag_disparo)
     2c4:	80 81       	ld	r24, Z
     2c6:	88 23       	and	r24, r24
     2c8:	09 f4       	brne	.+2      	; 0x2cc <anima_velocidade+0xe>
     2ca:	96 c0       	rjmp	.+300    	; 0x3f8 <anima_velocidade+0x13a>
	{
		switch(cont_dig)
     2cc:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <cont_dig.2025>
     2d0:	81 30       	cpi	r24, 0x01	; 1
     2d2:	51 f1       	breq	.+84     	; 0x328 <anima_velocidade+0x6a>
     2d4:	82 30       	cpi	r24, 0x02	; 2
     2d6:	09 f4       	brne	.+2      	; 0x2da <anima_velocidade+0x1c>
     2d8:	56 c0       	rjmp	.+172    	; 0x386 <anima_velocidade+0xc8>
     2da:	81 11       	cpse	r24, r1
     2dc:	87 c0       	rjmp	.+270    	; 0x3ec <anima_velocidade+0x12e>
		{
		case 0:
			PORTB &= 0b10000000; //resetando PB0 - PB6
     2de:	85 b1       	in	r24, 0x05	; 5
     2e0:	80 78       	andi	r24, 0x80	; 128
     2e2:	85 b9       	out	0x05, r24	; 5
			PORTB |= 0b01100000; //resetando PB4, pino que habilita o display das unidades
     2e4:	85 b1       	in	r24, 0x05	; 5
     2e6:	80 66       	ori	r24, 0x60	; 96
     2e8:	85 b9       	out	0x05, r24	; 5
			PORTB |= (((velocidade_carro / 1) % 10) & 0b00001111); // separa o digito das unidades e coloca em PB0 - PB3
     2ea:	c5 b1       	in	r28, 0x05	; 5
     2ec:	9a 01       	movw	r18, r20
     2ee:	ad ec       	ldi	r26, 0xCD	; 205
     2f0:	bc ec       	ldi	r27, 0xCC	; 204
     2f2:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__umulhisi3>
     2f6:	96 95       	lsr	r25
     2f8:	87 95       	ror	r24
     2fa:	96 95       	lsr	r25
     2fc:	87 95       	ror	r24
     2fe:	96 95       	lsr	r25
     300:	87 95       	ror	r24
     302:	9c 01       	movw	r18, r24
     304:	22 0f       	add	r18, r18
     306:	33 1f       	adc	r19, r19
     308:	88 0f       	add	r24, r24
     30a:	99 1f       	adc	r25, r25
     30c:	88 0f       	add	r24, r24
     30e:	99 1f       	adc	r25, r25
     310:	88 0f       	add	r24, r24
     312:	99 1f       	adc	r25, r25
     314:	82 0f       	add	r24, r18
     316:	93 1f       	adc	r25, r19
     318:	9a 01       	movw	r18, r20
     31a:	28 1b       	sub	r18, r24
     31c:	39 0b       	sbc	r19, r25
     31e:	c9 01       	movw	r24, r18
     320:	8f 70       	andi	r24, 0x0F	; 15
     322:	8c 2b       	or	r24, r28
     324:	85 b9       	out	0x05, r24	; 5
			break;
     326:	62 c0       	rjmp	.+196    	; 0x3ec <anima_velocidade+0x12e>

		case 1:
			PORTB &= 0b10000000; //resetando PB0 - PB6
     328:	85 b1       	in	r24, 0x05	; 5
     32a:	80 78       	andi	r24, 0x80	; 128
     32c:	85 b9       	out	0x05, r24	; 5
			PORTB |= 0b01010000; //resetando PB5, pino que habilita o display das dezenas
     32e:	85 b1       	in	r24, 0x05	; 5
     330:	80 65       	ori	r24, 0x50	; 80
     332:	85 b9       	out	0x05, r24	; 5
			PORTB |= (((velocidade_carro / 10) % 10) & 0b00001111); // separa o digito das unidades e coloca em PB0 - PB3
     334:	c5 b1       	in	r28, 0x05	; 5
     336:	9a 01       	movw	r18, r20
     338:	ad ec       	ldi	r26, 0xCD	; 205
     33a:	bc ec       	ldi	r27, 0xCC	; 204
     33c:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__umulhisi3>
     340:	ac 01       	movw	r20, r24
     342:	56 95       	lsr	r21
     344:	47 95       	ror	r20
     346:	56 95       	lsr	r21
     348:	47 95       	ror	r20
     34a:	56 95       	lsr	r21
     34c:	47 95       	ror	r20
     34e:	9a 01       	movw	r18, r20
     350:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__umulhisi3>
     354:	96 95       	lsr	r25
     356:	87 95       	ror	r24
     358:	96 95       	lsr	r25
     35a:	87 95       	ror	r24
     35c:	96 95       	lsr	r25
     35e:	87 95       	ror	r24
     360:	9c 01       	movw	r18, r24
     362:	22 0f       	add	r18, r18
     364:	33 1f       	adc	r19, r19
     366:	88 0f       	add	r24, r24
     368:	99 1f       	adc	r25, r25
     36a:	88 0f       	add	r24, r24
     36c:	99 1f       	adc	r25, r25
     36e:	88 0f       	add	r24, r24
     370:	99 1f       	adc	r25, r25
     372:	82 0f       	add	r24, r18
     374:	93 1f       	adc	r25, r19
     376:	9a 01       	movw	r18, r20
     378:	28 1b       	sub	r18, r24
     37a:	39 0b       	sbc	r19, r25
     37c:	c9 01       	movw	r24, r18
     37e:	8f 70       	andi	r24, 0x0F	; 15
     380:	8c 2b       	or	r24, r28
     382:	85 b9       	out	0x05, r24	; 5
			break;
     384:	33 c0       	rjmp	.+102    	; 0x3ec <anima_velocidade+0x12e>

		case 2:
			PORTB &= 0b10000000; //resetando PB0 - PB6
     386:	85 b1       	in	r24, 0x05	; 5
     388:	80 78       	andi	r24, 0x80	; 128
     38a:	85 b9       	out	0x05, r24	; 5
			PORTB |= 0b00110000; //resetando PB6, pino que habilita o display das centenas
     38c:	85 b1       	in	r24, 0x05	; 5
     38e:	80 63       	ori	r24, 0x30	; 48
     390:	85 b9       	out	0x05, r24	; 5
			PORTB |= (((velocidade_carro / 100) % 10) & 0b00001111); // separa o digito das unidades e coloca em PB0 - PB3
     392:	c5 b1       	in	r28, 0x05	; 5
     394:	9a 01       	movw	r18, r20
     396:	36 95       	lsr	r19
     398:	27 95       	ror	r18
     39a:	36 95       	lsr	r19
     39c:	27 95       	ror	r18
     39e:	ab e7       	ldi	r26, 0x7B	; 123
     3a0:	b4 e1       	ldi	r27, 0x14	; 20
     3a2:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__umulhisi3>
     3a6:	ac 01       	movw	r20, r24
     3a8:	56 95       	lsr	r21
     3aa:	47 95       	ror	r20
     3ac:	9a 01       	movw	r18, r20
     3ae:	ad ec       	ldi	r26, 0xCD	; 205
     3b0:	bc ec       	ldi	r27, 0xCC	; 204
     3b2:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__umulhisi3>
     3b6:	96 95       	lsr	r25
     3b8:	87 95       	ror	r24
     3ba:	96 95       	lsr	r25
     3bc:	87 95       	ror	r24
     3be:	96 95       	lsr	r25
     3c0:	87 95       	ror	r24
     3c2:	9c 01       	movw	r18, r24
     3c4:	22 0f       	add	r18, r18
     3c6:	33 1f       	adc	r19, r19
     3c8:	88 0f       	add	r24, r24
     3ca:	99 1f       	adc	r25, r25
     3cc:	88 0f       	add	r24, r24
     3ce:	99 1f       	adc	r25, r25
     3d0:	88 0f       	add	r24, r24
     3d2:	99 1f       	adc	r25, r25
     3d4:	82 0f       	add	r24, r18
     3d6:	93 1f       	adc	r25, r19
     3d8:	9a 01       	movw	r18, r20
     3da:	28 1b       	sub	r18, r24
     3dc:	39 0b       	sbc	r19, r25
     3de:	c9 01       	movw	r24, r18
     3e0:	8f 70       	andi	r24, 0x0F	; 15
     3e2:	8c 2b       	or	r24, r28
     3e4:	85 b9       	out	0x05, r24	; 5
			cont_dig = -1;
     3e6:	8f ef       	ldi	r24, 0xFF	; 255
     3e8:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <cont_dig.2025>
			break;
		}
		cont_dig++;
     3ec:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <cont_dig.2025>
     3f0:	8f 5f       	subi	r24, 0xFF	; 255
     3f2:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <cont_dig.2025>
		*flag_disparo = 0;
     3f6:	10 82       	st	Z, r1
	}
}
     3f8:	cf 91       	pop	r28
     3fa:	08 95       	ret

000003fc <anima_LCD>:

void anima_LCD(uint16_t diametro_pneu_cm, uint16_t rpm_motor, float distancia_hodometro_km, uint8_t *flag_disparo)
{
     3fc:	4f 92       	push	r4
     3fe:	5f 92       	push	r5
     400:	6f 92       	push	r6
     402:	7f 92       	push	r7
     404:	af 92       	push	r10
     406:	bf 92       	push	r11
     408:	cf 92       	push	r12
     40a:	df 92       	push	r13
     40c:	ef 92       	push	r14
     40e:	ff 92       	push	r15
     410:	0f 93       	push	r16
     412:	1f 93       	push	r17
     414:	cf 93       	push	r28
     416:	df 93       	push	r29
     418:	cd b7       	in	r28, 0x3d	; 61
     41a:	de b7       	in	r29, 0x3e	; 62
     41c:	62 97       	sbiw	r28, 0x12	; 18
     41e:	0f b6       	in	r0, 0x3f	; 63
     420:	f8 94       	cli
     422:	de bf       	out	0x3e, r29	; 62
     424:	0f be       	out	0x3f, r0	; 63
     426:	cd bf       	out	0x3d, r28	; 61
	if(*flag_disparo)
     428:	d8 01       	movw	r26, r16
     42a:	ec 91       	ld	r30, X
     42c:	ee 23       	and	r30, r30
     42e:	09 f4       	brne	.+2      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
     430:	71 c0       	rjmp	.+226    	; 0x514 <__EEPROM_REGION_LENGTH__+0x114>
     432:	29 01       	movw	r4, r18
     434:	3a 01       	movw	r6, r20
     436:	c7 2e       	mov	r12, r23
     438:	d6 2e       	mov	r13, r22
	{
		unsigned char diametro_pneu_cm_string[4];
		unsigned char rpm_motor_string[6];
		unsigned char distancia_hodometro_km_string[8];

		sprintf(diametro_pneu_cm_string, "%u", diametro_pneu_cm);
     43a:	9f 93       	push	r25
     43c:	8f 93       	push	r24
     43e:	0f 2e       	mov	r0, r31
     440:	f4 e0       	ldi	r31, 0x04	; 4
     442:	ef 2e       	mov	r14, r31
     444:	f1 e0       	ldi	r31, 0x01	; 1
     446:	ff 2e       	mov	r15, r31
     448:	f0 2d       	mov	r31, r0
     44a:	ff 92       	push	r15
     44c:	ef 92       	push	r14
     44e:	5e 01       	movw	r10, r28
     450:	bf e0       	ldi	r27, 0x0F	; 15
     452:	ab 0e       	add	r10, r27
     454:	b1 1c       	adc	r11, r1
     456:	bf 92       	push	r11
     458:	af 92       	push	r10
     45a:	0e 94 de 07 	call	0xfbc	; 0xfbc <sprintf>
		sprintf(rpm_motor_string, "%u", rpm_motor);
     45e:	cf 92       	push	r12
     460:	df 92       	push	r13
     462:	ff 92       	push	r15
     464:	ef 92       	push	r14
     466:	6e 01       	movw	r12, r28
     468:	e9 e0       	ldi	r30, 0x09	; 9
     46a:	ce 0e       	add	r12, r30
     46c:	d1 1c       	adc	r13, r1
     46e:	df 92       	push	r13
     470:	cf 92       	push	r12
     472:	0e 94 de 07 	call	0xfbc	; 0xfbc <sprintf>
		sprintf(distancia_hodometro_km_string, "%u", (uint16_t)distancia_hodometro_km);
     476:	c3 01       	movw	r24, r6
     478:	b2 01       	movw	r22, r4
     47a:	0e 94 58 06 	call	0xcb0	; 0xcb0 <__fixunssfsi>
     47e:	7f 93       	push	r23
     480:	6f 93       	push	r22
     482:	ff 92       	push	r15
     484:	ef 92       	push	r14
     486:	ce 01       	movw	r24, r28
     488:	01 96       	adiw	r24, 0x01	; 1
     48a:	7c 01       	movw	r14, r24
     48c:	9f 93       	push	r25
     48e:	8f 93       	push	r24
     490:	0e 94 de 07 	call	0xfbc	; 0xfbc <sprintf>

		nokia_lcd_clear();	// limpa o display nokia
     494:	0e 94 6f 04 	call	0x8de	; 0x8de <nokia_lcd_clear>

		nokia_lcd_set_cursor(0, 0);
     498:	60 e0       	ldi	r22, 0x00	; 0
     49a:	80 e0       	ldi	r24, 0x00	; 0
     49c:	0e 94 5b 05 	call	0xab6	; 0xab6 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Comp. Bordo: ", 1);
     4a0:	61 e0       	ldi	r22, 0x01	; 1
     4a2:	87 e0       	ldi	r24, 0x07	; 7
     4a4:	91 e0       	ldi	r25, 0x01	; 1
     4a6:	0e 94 37 05 	call	0xa6e	; 0xa6e <nokia_lcd_write_string>
		nokia_lcd_draw_Hline(10, 0 , 80);
     4aa:	40 e5       	ldi	r20, 0x50	; 80
     4ac:	60 e0       	ldi	r22, 0x00	; 0
     4ae:	8a e0       	ldi	r24, 0x0A	; 10
     4b0:	0e 94 48 05 	call	0xa90	; 0xa90 <nokia_lcd_draw_Hline>

		nokia_lcd_set_cursor(0, 14);
     4b4:	6e e0       	ldi	r22, 0x0E	; 14
     4b6:	80 e0       	ldi	r24, 0x00	; 0
     4b8:	0e 94 5b 05 	call	0xab6	; 0xab6 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("Dim(cm): ", 1);
     4bc:	61 e0       	ldi	r22, 0x01	; 1
     4be:	85 e1       	ldi	r24, 0x15	; 21
     4c0:	91 e0       	ldi	r25, 0x01	; 1
     4c2:	0e 94 37 05 	call	0xa6e	; 0xa6e <nokia_lcd_write_string>
		nokia_lcd_write_string(diametro_pneu_cm_string, 1);
     4c6:	61 e0       	ldi	r22, 0x01	; 1
     4c8:	c5 01       	movw	r24, r10
     4ca:	0e 94 37 05 	call	0xa6e	; 0xa6e <nokia_lcd_write_string>

		nokia_lcd_set_cursor(0, 24);
     4ce:	68 e1       	ldi	r22, 0x18	; 24
     4d0:	80 e0       	ldi	r24, 0x00	; 0
     4d2:	0e 94 5b 05 	call	0xab6	; 0xab6 <nokia_lcd_set_cursor>
		nokia_lcd_write_string("RPM: ", 1);
     4d6:	61 e0       	ldi	r22, 0x01	; 1
     4d8:	8f e1       	ldi	r24, 0x1F	; 31
     4da:	91 e0       	ldi	r25, 0x01	; 1
     4dc:	0e 94 37 05 	call	0xa6e	; 0xa6e <nokia_lcd_write_string>
		nokia_lcd_write_string(rpm_motor_string, 1);
     4e0:	61 e0       	ldi	r22, 0x01	; 1
     4e2:	c6 01       	movw	r24, r12
     4e4:	0e 94 37 05 	call	0xa6e	; 0xa6e <nokia_lcd_write_string>

		nokia_lcd_set_cursor(25, 34);
     4e8:	62 e2       	ldi	r22, 0x22	; 34
     4ea:	89 e1       	ldi	r24, 0x19	; 25
     4ec:	0e 94 5b 05 	call	0xab6	; 0xab6 <nokia_lcd_set_cursor>
		nokia_lcd_write_string(distancia_hodometro_km_string, 2);
     4f0:	62 e0       	ldi	r22, 0x02	; 2
     4f2:	c7 01       	movw	r24, r14
     4f4:	0e 94 37 05 	call	0xa6e	; 0xa6e <nokia_lcd_write_string>
		nokia_lcd_write_string("Km: ", 1);
     4f8:	61 e0       	ldi	r22, 0x01	; 1
     4fa:	85 e2       	ldi	r24, 0x25	; 37
     4fc:	91 e0       	ldi	r25, 0x01	; 1
     4fe:	0e 94 37 05 	call	0xa6e	; 0xa6e <nokia_lcd_write_string>

		nokia_lcd_render();
     502:	0e 94 60 05 	call	0xac0	; 0xac0 <nokia_lcd_render>
		*flag_disparo = 0;
     506:	d8 01       	movw	r26, r16
     508:	1c 92       	st	X, r1
     50a:	0f b6       	in	r0, 0x3f	; 63
     50c:	f8 94       	cli
     50e:	de bf       	out	0x3e, r29	; 62
     510:	0f be       	out	0x3f, r0	; 63
     512:	cd bf       	out	0x3d, r28	; 61
	}
}
     514:	62 96       	adiw	r28, 0x12	; 18
     516:	0f b6       	in	r0, 0x3f	; 63
     518:	f8 94       	cli
     51a:	de bf       	out	0x3e, r29	; 62
     51c:	0f be       	out	0x3f, r0	; 63
     51e:	cd bf       	out	0x3d, r28	; 61
     520:	df 91       	pop	r29
     522:	cf 91       	pop	r28
     524:	1f 91       	pop	r17
     526:	0f 91       	pop	r16
     528:	ff 90       	pop	r15
     52a:	ef 90       	pop	r14
     52c:	df 90       	pop	r13
     52e:	cf 90       	pop	r12
     530:	bf 90       	pop	r11
     532:	af 90       	pop	r10
     534:	7f 90       	pop	r7
     536:	6f 90       	pop	r6
     538:	5f 90       	pop	r5
     53a:	4f 90       	pop	r4
     53c:	08 95       	ret

0000053e <main>:
ISR(INT0_vect);
ISR(PCINT2_vect);

int main(void)
{
	configuracao();		// chamando funcao que configura
     53e:	0e 94 43 01 	call	0x286	; 0x286 <configuracao>
	nokia_lcd_init();	// inicia o displau nokia
     542:	0e 94 17 04 	call	0x82e	; 0x82e <nokia_lcd_init>

	while (1)
	{
		anima_velocidade(Velocidade_carro_kmH, &flag_5ms);
     546:	6b e3       	ldi	r22, 0x3B	; 59
     548:	71 e0       	ldi	r23, 0x01	; 1
     54a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Velocidade_carro_kmH>
     54e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Velocidade_carro_kmH+0x1>
     552:	0e 94 5f 01 	call	0x2be	; 0x2be <anima_velocidade>
		anima_LCD(Diametro_pneu_cm, RPM_motor, Distancia_hodometro_km, &flag_500ms);
     556:	20 91 30 01 	lds	r18, 0x0130	; 0x800130 <Distancia_hodometro_km>
     55a:	30 91 31 01 	lds	r19, 0x0131	; 0x800131 <Distancia_hodometro_km+0x1>
     55e:	40 91 32 01 	lds	r20, 0x0132	; 0x800132 <Distancia_hodometro_km+0x2>
     562:	50 91 33 01 	lds	r21, 0x0133	; 0x800133 <Distancia_hodometro_km+0x3>
     566:	60 91 38 01 	lds	r22, 0x0138	; 0x800138 <RPM_motor>
     56a:	70 91 39 01 	lds	r23, 0x0139	; 0x800139 <RPM_motor+0x1>
     56e:	0a e3       	ldi	r16, 0x3A	; 58
     570:	11 e0       	ldi	r17, 0x01	; 1
     572:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     576:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     57a:	0e 94 fe 01 	call	0x3fc	; 0x3fc <anima_LCD>
     57e:	e3 cf       	rjmp	.-58     	; 0x546 <main+0x8>

00000580 <__vector_14>:
	}
}

// incremendo do tempo
ISR(TIMER0_COMPA_vect)
{
     580:	1f 92       	push	r1
     582:	0f 92       	push	r0
     584:	0f b6       	in	r0, 0x3f	; 63
     586:	0f 92       	push	r0
     588:	11 24       	eor	r1, r1
     58a:	cf 92       	push	r12
     58c:	df 92       	push	r13
     58e:	ef 92       	push	r14
     590:	ff 92       	push	r15
     592:	2f 93       	push	r18
     594:	3f 93       	push	r19
     596:	4f 93       	push	r20
     598:	5f 93       	push	r21
     59a:	6f 93       	push	r22
     59c:	7f 93       	push	r23
     59e:	8f 93       	push	r24
     5a0:	9f 93       	push	r25
     5a2:	af 93       	push	r26
     5a4:	bf 93       	push	r27
     5a6:	ef 93       	push	r30
     5a8:	ff 93       	push	r31
	tempo_ms++;
     5aa:	c0 90 34 01 	lds	r12, 0x0134	; 0x800134 <tempo_ms>
     5ae:	d0 90 35 01 	lds	r13, 0x0135	; 0x800135 <tempo_ms+0x1>
     5b2:	e0 90 36 01 	lds	r14, 0x0136	; 0x800136 <tempo_ms+0x2>
     5b6:	f0 90 37 01 	lds	r15, 0x0137	; 0x800137 <tempo_ms+0x3>
     5ba:	8f ef       	ldi	r24, 0xFF	; 255
     5bc:	c8 1a       	sub	r12, r24
     5be:	d8 0a       	sbc	r13, r24
     5c0:	e8 0a       	sbc	r14, r24
     5c2:	f8 0a       	sbc	r15, r24
     5c4:	c0 92 34 01 	sts	0x0134, r12	; 0x800134 <tempo_ms>
     5c8:	d0 92 35 01 	sts	0x0135, r13	; 0x800135 <tempo_ms+0x1>
     5cc:	e0 92 36 01 	sts	0x0136, r14	; 0x800136 <tempo_ms+0x2>
     5d0:	f0 92 37 01 	sts	0x0137, r15	; 0x800137 <tempo_ms+0x3>
	//PORTD ^= 0b01000000;
	if((tempo_ms % 5) == 0) //true a cada 5ms
     5d4:	c7 01       	movw	r24, r14
     5d6:	b6 01       	movw	r22, r12
     5d8:	25 e0       	ldi	r18, 0x05	; 5
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	40 e0       	ldi	r20, 0x00	; 0
     5de:	50 e0       	ldi	r21, 0x00	; 0
     5e0:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__udivmodsi4>
     5e4:	67 2b       	or	r22, r23
     5e6:	68 2b       	or	r22, r24
     5e8:	69 2b       	or	r22, r25
     5ea:	19 f4       	brne	.+6      	; 0x5f2 <__vector_14+0x72>
		flag_5ms = 1;
     5ec:	81 e0       	ldi	r24, 0x01	; 1
     5ee:	80 93 3b 01 	sts	0x013B, r24	; 0x80013b <flag_5ms>
	if((tempo_ms % 500) == 0) //true a cada 500ms
     5f2:	c7 01       	movw	r24, r14
     5f4:	b6 01       	movw	r22, r12
     5f6:	24 ef       	ldi	r18, 0xF4	; 244
     5f8:	31 e0       	ldi	r19, 0x01	; 1
     5fa:	40 e0       	ldi	r20, 0x00	; 0
     5fc:	50 e0       	ldi	r21, 0x00	; 0
     5fe:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__udivmodsi4>
     602:	67 2b       	or	r22, r23
     604:	68 2b       	or	r22, r24
     606:	69 2b       	or	r22, r25
     608:	19 f4       	brne	.+6      	; 0x610 <__vector_14+0x90>
		flag_500ms = 1;
     60a:	81 e0       	ldi	r24, 0x01	; 1
     60c:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <flag_500ms>
}
     610:	ff 91       	pop	r31
     612:	ef 91       	pop	r30
     614:	bf 91       	pop	r27
     616:	af 91       	pop	r26
     618:	9f 91       	pop	r25
     61a:	8f 91       	pop	r24
     61c:	7f 91       	pop	r23
     61e:	6f 91       	pop	r22
     620:	5f 91       	pop	r21
     622:	4f 91       	pop	r20
     624:	3f 91       	pop	r19
     626:	2f 91       	pop	r18
     628:	ff 90       	pop	r15
     62a:	ef 90       	pop	r14
     62c:	df 90       	pop	r13
     62e:	cf 90       	pop	r12
     630:	0f 90       	pop	r0
     632:	0f be       	out	0x3f, r0	; 63
     634:	0f 90       	pop	r0
     636:	1f 90       	pop	r1
     638:	18 95       	reti

0000063a <__vector_1>:

ISR(INT0_vect)
{
     63a:	1f 92       	push	r1
     63c:	0f 92       	push	r0
     63e:	0f b6       	in	r0, 0x3f	; 63
     640:	0f 92       	push	r0
     642:	11 24       	eor	r1, r1
     644:	8f 92       	push	r8
     646:	9f 92       	push	r9
     648:	af 92       	push	r10
     64a:	bf 92       	push	r11
     64c:	cf 92       	push	r12
     64e:	df 92       	push	r13
     650:	ef 92       	push	r14
     652:	ff 92       	push	r15
     654:	2f 93       	push	r18
     656:	3f 93       	push	r19
     658:	4f 93       	push	r20
     65a:	5f 93       	push	r21
     65c:	6f 93       	push	r22
     65e:	7f 93       	push	r23
     660:	8f 93       	push	r24
     662:	9f 93       	push	r25
     664:	af 93       	push	r26
     666:	bf 93       	push	r27
     668:	ef 93       	push	r30
     66a:	ff 93       	push	r31
	static uint8_t cont_5voltas = 0;
	static uint32_t tempo_ms_anterior = 0;
	uint16_t delta_t_ms = 0;

	if(cont_5voltas == 5)
     66c:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <cont_5voltas.2049>
     670:	85 30       	cpi	r24, 0x05	; 5
     672:	b9 f5       	brne	.+110    	; 0x6e2 <__vector_1+0xa8>
	{
		delta_t_ms = tempo_ms - tempo_ms_anterior;
     674:	80 90 34 01 	lds	r8, 0x0134	; 0x800134 <tempo_ms>
     678:	90 90 35 01 	lds	r9, 0x0135	; 0x800135 <tempo_ms+0x1>
     67c:	a0 90 36 01 	lds	r10, 0x0136	; 0x800136 <tempo_ms+0x2>
     680:	b0 90 37 01 	lds	r11, 0x0137	; 0x800137 <tempo_ms+0x3>
     684:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
     688:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <__data_end+0x1>
     68c:	64 01       	movw	r12, r8
     68e:	c8 1a       	sub	r12, r24
     690:	d9 0a       	sbc	r13, r25
		RPM_motor = 300000 / (delta_t_ms); //(5voltas*60min*1000ms)/delta
     692:	e1 2c       	mov	r14, r1
     694:	f1 2c       	mov	r15, r1
     696:	60 ee       	ldi	r22, 0xE0	; 224
     698:	73 e9       	ldi	r23, 0x93	; 147
     69a:	84 e0       	ldi	r24, 0x04	; 4
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	a7 01       	movw	r20, r14
     6a0:	96 01       	movw	r18, r12
     6a2:	0e 94 b0 07 	call	0xf60	; 0xf60 <__divmodsi4>
     6a6:	30 93 39 01 	sts	0x0139, r19	; 0x800139 <RPM_motor+0x1>
     6aa:	20 93 38 01 	sts	0x0138, r18	; 0x800138 <RPM_motor>
		Velocidade_carro_kmH = ((uint32_t)Diametro_pneu_cm * 565) / delta_t_ms; //(PI*3.6)/(60*100)
     6ae:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     6b2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     6b6:	a5 e3       	ldi	r26, 0x35	; 53
     6b8:	b2 e0       	ldi	r27, 0x02	; 2
     6ba:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__umulhisi3>
     6be:	a7 01       	movw	r20, r14
     6c0:	96 01       	movw	r18, r12
     6c2:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__udivmodsi4>
     6c6:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <Velocidade_carro_kmH+0x1>
     6ca:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <Velocidade_carro_kmH>
		tempo_ms_anterior = tempo_ms;
     6ce:	80 92 2a 01 	sts	0x012A, r8	; 0x80012a <__data_end>
     6d2:	90 92 2b 01 	sts	0x012B, r9	; 0x80012b <__data_end+0x1>
     6d6:	a0 92 2c 01 	sts	0x012C, r10	; 0x80012c <__data_end+0x2>
     6da:	b0 92 2d 01 	sts	0x012D, r11	; 0x80012d <__data_end+0x3>
		cont_5voltas = 0;
     6de:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <cont_5voltas.2049>
	}
	cont_5voltas++;
     6e2:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <cont_5voltas.2049>
     6e6:	8f 5f       	subi	r24, 0xFF	; 255
     6e8:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <cont_5voltas.2049>
	Distancia_hodometro_km += ((float)Diametro_pneu_cm * 3.1415) / 100000;
     6ec:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     6f0:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	0e 94 87 06 	call	0xd0e	; 0xd0e <__floatunsisf>
     6fc:	26 e5       	ldi	r18, 0x56	; 86
     6fe:	3e e0       	ldi	r19, 0x0E	; 14
     700:	49 e4       	ldi	r20, 0x49	; 73
     702:	50 e4       	ldi	r21, 0x40	; 64
     704:	0e 94 15 07 	call	0xe2a	; 0xe2a <__mulsf3>
     708:	20 e0       	ldi	r18, 0x00	; 0
     70a:	30 e5       	ldi	r19, 0x50	; 80
     70c:	43 ec       	ldi	r20, 0xC3	; 195
     70e:	57 e4       	ldi	r21, 0x47	; 71
     710:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__divsf3>
     714:	9b 01       	movw	r18, r22
     716:	ac 01       	movw	r20, r24
     718:	60 91 30 01 	lds	r22, 0x0130	; 0x800130 <Distancia_hodometro_km>
     71c:	70 91 31 01 	lds	r23, 0x0131	; 0x800131 <Distancia_hodometro_km+0x1>
     720:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <Distancia_hodometro_km+0x2>
     724:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <Distancia_hodometro_km+0x3>
     728:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__addsf3>
     72c:	60 93 30 01 	sts	0x0130, r22	; 0x800130 <Distancia_hodometro_km>
     730:	70 93 31 01 	sts	0x0131, r23	; 0x800131 <Distancia_hodometro_km+0x1>
     734:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <Distancia_hodometro_km+0x2>
     738:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <Distancia_hodometro_km+0x3>
}
     73c:	ff 91       	pop	r31
     73e:	ef 91       	pop	r30
     740:	bf 91       	pop	r27
     742:	af 91       	pop	r26
     744:	9f 91       	pop	r25
     746:	8f 91       	pop	r24
     748:	7f 91       	pop	r23
     74a:	6f 91       	pop	r22
     74c:	5f 91       	pop	r21
     74e:	4f 91       	pop	r20
     750:	3f 91       	pop	r19
     752:	2f 91       	pop	r18
     754:	ff 90       	pop	r15
     756:	ef 90       	pop	r14
     758:	df 90       	pop	r13
     75a:	cf 90       	pop	r12
     75c:	bf 90       	pop	r11
     75e:	af 90       	pop	r10
     760:	9f 90       	pop	r9
     762:	8f 90       	pop	r8
     764:	0f 90       	pop	r0
     766:	0f be       	out	0x3f, r0	; 63
     768:	0f 90       	pop	r0
     76a:	1f 90       	pop	r1
     76c:	18 95       	reti

0000076e <__vector_5>:

ISR(PCINT2_vect) // interrupção por mudança de pino na porta D (PD3 e PD4) - BOTÂO + ou -
{
     76e:	1f 92       	push	r1
     770:	0f 92       	push	r0
     772:	0f b6       	in	r0, 0x3f	; 63
     774:	0f 92       	push	r0
     776:	11 24       	eor	r1, r1
     778:	8f 93       	push	r24
     77a:	9f 93       	push	r25
	if(!(PIND & 0b00010000) == 0) // BOTÃO + PD3
     77c:	4c 9b       	sbis	0x09, 4	; 9
     77e:	0c c0       	rjmp	.+24     	; 0x798 <__vector_5+0x2a>
	{
		if(Diametro_pneu_cm < 200)
     780:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     784:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     788:	88 3c       	cpi	r24, 0xC8	; 200
     78a:	91 05       	cpc	r25, r1
     78c:	28 f4       	brcc	.+10     	; 0x798 <__vector_5+0x2a>
			Diametro_pneu_cm++;
     78e:	01 96       	adiw	r24, 0x01	; 1
     790:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     794:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}

	if(!(PIND & 0b00001000) == 0) // BOTÃO - PD4
     798:	4b 9b       	sbis	0x09, 3	; 9
     79a:	0b c0       	rjmp	.+22     	; 0x7b2 <__vector_5+0x44>
	{
		if(Diametro_pneu_cm > 0)
     79c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     7a0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7a4:	00 97       	sbiw	r24, 0x00	; 0
     7a6:	29 f0       	breq	.+10     	; 0x7b2 <__vector_5+0x44>
			Diametro_pneu_cm--;
     7a8:	01 97       	sbiw	r24, 0x01	; 1
     7aa:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     7ae:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
}
     7b2:	9f 91       	pop	r25
     7b4:	8f 91       	pop	r24
     7b6:	0f 90       	pop	r0
     7b8:	0f be       	out	0x3f, r0	; 63
     7ba:	0f 90       	pop	r0
     7bc:	1f 90       	pop	r1
     7be:	18 95       	reti

000007c0 <write>:
		nokia_lcd.screen[i] = 0x00;
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
     7c0:	98 b1       	in	r25, 0x08	; 8
     7c2:	97 7f       	andi	r25, 0xF7	; 247
     7c4:	98 b9       	out	0x08, r25	; 8
     7c6:	66 23       	and	r22, r22
     7c8:	29 f0       	breq	.+10     	; 0x7d4 <write+0x14>
     7ca:	98 b1       	in	r25, 0x08	; 8
     7cc:	94 60       	ori	r25, 0x04	; 4
     7ce:	98 b9       	out	0x08, r25	; 8
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	1f c0       	rjmp	.+62     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     7d4:	98 b1       	in	r25, 0x08	; 8
     7d6:	9b 7f       	andi	r25, 0xFB	; 251
     7d8:	98 b9       	out	0x08, r25	; 8
     7da:	fa cf       	rjmp	.-12     	; 0x7d0 <write+0x10>
     7dc:	47 e0       	ldi	r20, 0x07	; 7
     7de:	50 e0       	ldi	r21, 0x00	; 0
     7e0:	49 1b       	sub	r20, r25
     7e2:	51 09       	sbc	r21, r1
     7e4:	28 2f       	mov	r18, r24
     7e6:	30 e0       	ldi	r19, 0x00	; 0
     7e8:	02 c0       	rjmp	.+4      	; 0x7ee <write+0x2e>
     7ea:	35 95       	asr	r19
     7ec:	27 95       	ror	r18
     7ee:	4a 95       	dec	r20
     7f0:	e2 f7       	brpl	.-8      	; 0x7ea <write+0x2a>
     7f2:	20 ff       	sbrs	r18, 0
     7f4:	04 c0       	rjmp	.+8      	; 0x7fe <write+0x3e>
     7f6:	28 b1       	in	r18, 0x08	; 8
     7f8:	22 60       	ori	r18, 0x02	; 2
     7fa:	28 b9       	out	0x08, r18	; 8
     7fc:	03 c0       	rjmp	.+6      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     7fe:	28 b1       	in	r18, 0x08	; 8
     800:	2d 7f       	andi	r18, 0xFD	; 253
     802:	28 b9       	out	0x08, r18	; 8
     804:	28 b1       	in	r18, 0x08	; 8
     806:	21 60       	ori	r18, 0x01	; 1
     808:	28 b9       	out	0x08, r18	; 8
     80a:	28 b1       	in	r18, 0x08	; 8
     80c:	2e 7f       	andi	r18, 0xFE	; 254
     80e:	28 b9       	out	0x08, r18	; 8
     810:	9f 5f       	subi	r25, 0xFF	; 255
     812:	98 30       	cpi	r25, 0x08	; 8
     814:	18 f3       	brcs	.-58     	; 0x7dc <write+0x1c>
     816:	88 b1       	in	r24, 0x08	; 8
     818:	88 60       	ori	r24, 0x08	; 8
     81a:	88 b9       	out	0x08, r24	; 8
     81c:	08 95       	ret

0000081e <write_cmd>:
     81e:	60 e0       	ldi	r22, 0x00	; 0
     820:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <write>
     824:	08 95       	ret

00000826 <write_data>:
     826:	61 e0       	ldi	r22, 0x01	; 1
     828:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <write>
     82c:	08 95       	ret

0000082e <nokia_lcd_init>:
     82e:	cf 93       	push	r28
     830:	df 93       	push	r29
     832:	87 b1       	in	r24, 0x07	; 7
     834:	88 60       	ori	r24, 0x08	; 8
     836:	87 b9       	out	0x07, r24	; 7
     838:	87 b1       	in	r24, 0x07	; 7
     83a:	80 61       	ori	r24, 0x10	; 16
     83c:	87 b9       	out	0x07, r24	; 7
     83e:	87 b1       	in	r24, 0x07	; 7
     840:	84 60       	ori	r24, 0x04	; 4
     842:	87 b9       	out	0x07, r24	; 7
     844:	87 b1       	in	r24, 0x07	; 7
     846:	82 60       	ori	r24, 0x02	; 2
     848:	87 b9       	out	0x07, r24	; 7
     84a:	87 b1       	in	r24, 0x07	; 7
     84c:	81 60       	ori	r24, 0x01	; 1
     84e:	87 b9       	out	0x07, r24	; 7
     850:	88 b1       	in	r24, 0x08	; 8
     852:	80 61       	ori	r24, 0x10	; 16
     854:	88 b9       	out	0x08, r24	; 8
     856:	88 b1       	in	r24, 0x08	; 8
     858:	88 60       	ori	r24, 0x08	; 8
     85a:	88 b9       	out	0x08, r24	; 8
     85c:	83 ec       	ldi	r24, 0xC3	; 195
     85e:	99 e0       	ldi	r25, 0x09	; 9
     860:	01 97       	sbiw	r24, 0x01	; 1
     862:	f1 f7       	brne	.-4      	; 0x860 <nokia_lcd_init+0x32>
     864:	00 c0       	rjmp	.+0      	; 0x866 <nokia_lcd_init+0x38>
     866:	00 00       	nop
     868:	88 b1       	in	r24, 0x08	; 8
     86a:	8f 7e       	andi	r24, 0xEF	; 239
     86c:	88 b9       	out	0x08, r24	; 8
     86e:	8b e5       	ldi	r24, 0x5B	; 91
     870:	94 e4       	ldi	r25, 0x44	; 68
     872:	01 97       	sbiw	r24, 0x01	; 1
     874:	f1 f7       	brne	.-4      	; 0x872 <nokia_lcd_init+0x44>
     876:	00 c0       	rjmp	.+0      	; 0x878 <nokia_lcd_init+0x4a>
     878:	00 00       	nop
     87a:	88 b1       	in	r24, 0x08	; 8
     87c:	80 61       	ori	r24, 0x10	; 16
     87e:	88 b9       	out	0x08, r24	; 8
     880:	88 b1       	in	r24, 0x08	; 8
     882:	87 7f       	andi	r24, 0xF7	; 247
     884:	88 b9       	out	0x08, r24	; 8
     886:	81 e2       	ldi	r24, 0x21	; 33
     888:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>
     88c:	83 e1       	ldi	r24, 0x13	; 19
     88e:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>
     892:	86 e0       	ldi	r24, 0x06	; 6
     894:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>
     898:	82 ec       	ldi	r24, 0xC2	; 194
     89a:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>
     89e:	80 e2       	ldi	r24, 0x20	; 32
     8a0:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>
     8a4:	89 e0       	ldi	r24, 0x09	; 9
     8a6:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>
     8aa:	80 e8       	ldi	r24, 0x80	; 128
     8ac:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>
     8b0:	80 e4       	ldi	r24, 0x40	; 64
     8b2:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>
     8b6:	c0 e0       	ldi	r28, 0x00	; 0
     8b8:	d0 e0       	ldi	r29, 0x00	; 0
     8ba:	04 c0       	rjmp	.+8      	; 0x8c4 <nokia_lcd_init+0x96>
     8bc:	80 e0       	ldi	r24, 0x00	; 0
     8be:	0e 94 13 04 	call	0x826	; 0x826 <write_data>
     8c2:	21 96       	adiw	r28, 0x01	; 1
     8c4:	c8 3f       	cpi	r28, 0xF8	; 248
     8c6:	91 e0       	ldi	r25, 0x01	; 1
     8c8:	d9 07       	cpc	r29, r25
     8ca:	c0 f3       	brcs	.-16     	; 0x8bc <nokia_lcd_init+0x8e>
     8cc:	88 e0       	ldi	r24, 0x08	; 8
     8ce:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>
     8d2:	8c e0       	ldi	r24, 0x0C	; 12
     8d4:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>
     8d8:	df 91       	pop	r29
     8da:	cf 91       	pop	r28
     8dc:	08 95       	ret

000008de <nokia_lcd_clear>:
     8de:	80 e8       	ldi	r24, 0x80	; 128
     8e0:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>
     8e4:	80 e4       	ldi	r24, 0x40	; 64
     8e6:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>
     8ea:	10 92 34 03 	sts	0x0334, r1	; 0x800334 <nokia_lcd+0x1f8>
     8ee:	10 92 35 03 	sts	0x0335, r1	; 0x800335 <nokia_lcd+0x1f9>
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	05 c0       	rjmp	.+10     	; 0x902 <__stack+0x3>
     8f8:	fc 01       	movw	r30, r24
     8fa:	e4 5c       	subi	r30, 0xC4	; 196
     8fc:	fe 4f       	sbci	r31, 0xFE	; 254
     8fe:	10 82       	st	Z, r1
     900:	01 96       	adiw	r24, 0x01	; 1
     902:	88 3f       	cpi	r24, 0xF8	; 248
     904:	21 e0       	ldi	r18, 0x01	; 1
     906:	92 07       	cpc	r25, r18
     908:	b8 f3       	brcs	.-18     	; 0x8f8 <nokia_lcd_clear+0x1a>
     90a:	08 95       	ret

0000090c <nokia_lcd_set_pixel>:
}

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
     90c:	26 2f       	mov	r18, r22
     90e:	26 95       	lsr	r18
     910:	26 95       	lsr	r18
     912:	26 95       	lsr	r18
     914:	90 e0       	ldi	r25, 0x00	; 0
     916:	34 e5       	ldi	r19, 0x54	; 84
     918:	23 9f       	mul	r18, r19
     91a:	80 0d       	add	r24, r0
     91c:	91 1d       	adc	r25, r1
     91e:	11 24       	eor	r1, r1
	if (value)
     920:	44 23       	and	r20, r20
     922:	79 f0       	breq	.+30     	; 0x942 <nokia_lcd_set_pixel+0x36>
		*byte |= (1 << (y % 8));
     924:	67 70       	andi	r22, 0x07	; 7
     926:	21 e0       	ldi	r18, 0x01	; 1
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	02 c0       	rjmp	.+4      	; 0x930 <nokia_lcd_set_pixel+0x24>
     92c:	22 0f       	add	r18, r18
     92e:	33 1f       	adc	r19, r19
     930:	6a 95       	dec	r22
     932:	e2 f7       	brpl	.-8      	; 0x92c <nokia_lcd_set_pixel+0x20>
     934:	fc 01       	movw	r30, r24
     936:	e4 5c       	subi	r30, 0xC4	; 196
     938:	fe 4f       	sbci	r31, 0xFE	; 254
     93a:	80 81       	ld	r24, Z
     93c:	28 2b       	or	r18, r24
     93e:	20 83       	st	Z, r18
     940:	08 95       	ret
	else
		*byte &= ~(1 << (y %8 ));
     942:	67 70       	andi	r22, 0x07	; 7
     944:	21 e0       	ldi	r18, 0x01	; 1
     946:	30 e0       	ldi	r19, 0x00	; 0
     948:	02 c0       	rjmp	.+4      	; 0x94e <nokia_lcd_set_pixel+0x42>
     94a:	22 0f       	add	r18, r18
     94c:	33 1f       	adc	r19, r19
     94e:	6a 95       	dec	r22
     950:	e2 f7       	brpl	.-8      	; 0x94a <nokia_lcd_set_pixel+0x3e>
     952:	fc 01       	movw	r30, r24
     954:	e4 5c       	subi	r30, 0xC4	; 196
     956:	fe 4f       	sbci	r31, 0xFE	; 254
     958:	20 95       	com	r18
     95a:	80 81       	ld	r24, Z
     95c:	28 23       	and	r18, r24
     95e:	20 83       	st	Z, r18
     960:	08 95       	ret

00000962 <nokia_lcd_write_char>:
}

void nokia_lcd_write_char(char code, uint8_t scale)
{
     962:	ef 92       	push	r14
     964:	ff 92       	push	r15
     966:	0f 93       	push	r16
     968:	1f 93       	push	r17
     96a:	cf 93       	push	r28
     96c:	df 93       	push	r29
     96e:	e8 2e       	mov	r14, r24
     970:	f6 2e       	mov	r15, r22
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
     972:	00 e0       	ldi	r16, 0x00	; 0
     974:	45 c0       	rjmp	.+138    	; 0xa00 <nokia_lcd_write_char+0x9e>
		for (y = 0; y < 7*scale; y++)
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
     976:	2e 2d       	mov	r18, r14
     978:	30 e0       	ldi	r19, 0x00	; 0
     97a:	20 52       	subi	r18, 0x20	; 32
     97c:	31 09       	sbc	r19, r1
     97e:	80 2f       	mov	r24, r16
     980:	6f 2d       	mov	r22, r15
     982:	0e 94 82 07 	call	0xf04	; 0xf04 <__udivmodqi4>
     986:	f9 01       	movw	r30, r18
     988:	ee 0f       	add	r30, r30
     98a:	ff 1f       	adc	r31, r31
     98c:	ee 0f       	add	r30, r30
     98e:	ff 1f       	adc	r31, r31
     990:	e2 0f       	add	r30, r18
     992:	f3 1f       	adc	r31, r19
     994:	e8 0f       	add	r30, r24
     996:	f1 1d       	adc	r31, r1
     998:	e8 59       	subi	r30, 0x98	; 152
     99a:	ff 4f       	sbci	r31, 0xFF	; 255
     99c:	e4 91       	lpm	r30, Z
     99e:	81 2f       	mov	r24, r17
     9a0:	0e 94 82 07 	call	0xf04	; 0xf04 <__udivmodqi4>
     9a4:	f0 e0       	ldi	r31, 0x00	; 0
     9a6:	02 c0       	rjmp	.+4      	; 0x9ac <nokia_lcd_write_char+0x4a>
     9a8:	f5 95       	asr	r31
     9aa:	e7 95       	ror	r30
     9ac:	8a 95       	dec	r24
     9ae:	e2 f7       	brpl	.-8      	; 0x9a8 <nokia_lcd_write_char+0x46>
     9b0:	e0 ff       	sbrs	r30, 0
     9b2:	0a c0       	rjmp	.+20     	; 0x9c8 <nokia_lcd_write_char+0x66>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
     9b4:	60 91 35 03 	lds	r22, 0x0335	; 0x800335 <nokia_lcd+0x1f9>
     9b8:	80 91 34 03 	lds	r24, 0x0334	; 0x800334 <nokia_lcd+0x1f8>
     9bc:	61 0f       	add	r22, r17
     9be:	41 e0       	ldi	r20, 0x01	; 1
     9c0:	80 0f       	add	r24, r16
     9c2:	0e 94 86 04 	call	0x90c	; 0x90c <nokia_lcd_set_pixel>
     9c6:	09 c0       	rjmp	.+18     	; 0x9da <nokia_lcd_write_char+0x78>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
     9c8:	60 91 35 03 	lds	r22, 0x0335	; 0x800335 <nokia_lcd+0x1f9>
     9cc:	80 91 34 03 	lds	r24, 0x0334	; 0x800334 <nokia_lcd+0x1f8>
     9d0:	61 0f       	add	r22, r17
     9d2:	40 e0       	ldi	r20, 0x00	; 0
     9d4:	80 0f       	add	r24, r16
     9d6:	0e 94 86 04 	call	0x90c	; 0x90c <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
     9da:	1f 5f       	subi	r17, 0xFF	; 255
     9dc:	01 c0       	rjmp	.+2      	; 0x9e0 <nokia_lcd_write_char+0x7e>
     9de:	10 e0       	ldi	r17, 0x00	; 0
     9e0:	21 2f       	mov	r18, r17
     9e2:	30 e0       	ldi	r19, 0x00	; 0
     9e4:	ce 01       	movw	r24, r28
     9e6:	88 0f       	add	r24, r24
     9e8:	99 1f       	adc	r25, r25
     9ea:	88 0f       	add	r24, r24
     9ec:	99 1f       	adc	r25, r25
     9ee:	88 0f       	add	r24, r24
     9f0:	99 1f       	adc	r25, r25
     9f2:	8c 1b       	sub	r24, r28
     9f4:	9d 0b       	sbc	r25, r29
     9f6:	28 17       	cp	r18, r24
     9f8:	39 07       	cpc	r19, r25
     9fa:	0c f4       	brge	.+2      	; 0x9fe <nokia_lcd_write_char+0x9c>
     9fc:	bc cf       	rjmp	.-136    	; 0x976 <nokia_lcd_write_char+0x14>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
     9fe:	0f 5f       	subi	r16, 0xFF	; 255
     a00:	20 2f       	mov	r18, r16
     a02:	30 e0       	ldi	r19, 0x00	; 0
     a04:	cf 2d       	mov	r28, r15
     a06:	d0 e0       	ldi	r29, 0x00	; 0
     a08:	ce 01       	movw	r24, r28
     a0a:	88 0f       	add	r24, r24
     a0c:	99 1f       	adc	r25, r25
     a0e:	88 0f       	add	r24, r24
     a10:	99 1f       	adc	r25, r25
     a12:	8c 0f       	add	r24, r28
     a14:	9d 1f       	adc	r25, r29
     a16:	28 17       	cp	r18, r24
     a18:	39 07       	cpc	r19, r25
     a1a:	0c f3       	brlt	.-62     	; 0x9de <nokia_lcd_write_char+0x7c>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
     a1c:	e4 e3       	ldi	r30, 0x34	; 52
     a1e:	f3 e0       	ldi	r31, 0x03	; 3
     a20:	8f 2d       	mov	r24, r15
     a22:	88 0f       	add	r24, r24
     a24:	88 0f       	add	r24, r24
     a26:	8f 0d       	add	r24, r15
     a28:	90 81       	ld	r25, Z
     a2a:	89 0f       	add	r24, r25
     a2c:	8f 5f       	subi	r24, 0xFF	; 255
     a2e:	80 83       	st	Z, r24
	if (nokia_lcd.cursor_x >= 84) {
     a30:	84 35       	cpi	r24, 0x54	; 84
     a32:	70 f0       	brcs	.+28     	; 0xa50 <nokia_lcd_write_char+0xee>
		nokia_lcd.cursor_x = 0;
     a34:	10 92 34 03 	sts	0x0334, r1	; 0x800334 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
     a38:	e5 e3       	ldi	r30, 0x35	; 53
     a3a:	f3 e0       	ldi	r31, 0x03	; 3
     a3c:	8f 2d       	mov	r24, r15
     a3e:	88 0f       	add	r24, r24
     a40:	88 0f       	add	r24, r24
     a42:	88 0f       	add	r24, r24
     a44:	98 2f       	mov	r25, r24
     a46:	9f 19       	sub	r25, r15
     a48:	80 81       	ld	r24, Z
     a4a:	89 0f       	add	r24, r25
     a4c:	8f 5f       	subi	r24, 0xFF	; 255
     a4e:	80 83       	st	Z, r24
	}
	if (nokia_lcd.cursor_y >= 48) {
     a50:	80 91 35 03 	lds	r24, 0x0335	; 0x800335 <nokia_lcd+0x1f9>
     a54:	80 33       	cpi	r24, 0x30	; 48
     a56:	20 f0       	brcs	.+8      	; 0xa60 <nokia_lcd_write_char+0xfe>
		nokia_lcd.cursor_x = 0;
     a58:	10 92 34 03 	sts	0x0334, r1	; 0x800334 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
     a5c:	10 92 35 03 	sts	0x0335, r1	; 0x800335 <nokia_lcd+0x1f9>
	}
}
     a60:	df 91       	pop	r29
     a62:	cf 91       	pop	r28
     a64:	1f 91       	pop	r17
     a66:	0f 91       	pop	r16
     a68:	ff 90       	pop	r15
     a6a:	ef 90       	pop	r14
     a6c:	08 95       	ret

00000a6e <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
     a6e:	1f 93       	push	r17
     a70:	cf 93       	push	r28
     a72:	df 93       	push	r29
     a74:	ec 01       	movw	r28, r24
     a76:	16 2f       	mov	r17, r22
	while(*str)
     a78:	04 c0       	rjmp	.+8      	; 0xa82 <nokia_lcd_write_string+0x14>
		nokia_lcd_write_char(*str++, scale);
     a7a:	21 96       	adiw	r28, 0x01	; 1
     a7c:	61 2f       	mov	r22, r17
     a7e:	0e 94 b1 04 	call	0x962	; 0x962 <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
     a82:	88 81       	ld	r24, Y
     a84:	81 11       	cpse	r24, r1
     a86:	f9 cf       	rjmp	.-14     	; 0xa7a <nokia_lcd_write_string+0xc>
		nokia_lcd_write_char(*str++, scale);
}
     a88:	df 91       	pop	r29
     a8a:	cf 91       	pop	r28
     a8c:	1f 91       	pop	r17
     a8e:	08 95       	ret

00000a90 <nokia_lcd_draw_Hline>:

void nokia_lcd_draw_Hline(uint8_t y1, uint8_t x1, uint8_t x2) /*Função para desenha linha veritical*/
{
     a90:	1f 93       	push	r17
     a92:	cf 93       	push	r28
     a94:	df 93       	push	r29
     a96:	18 2f       	mov	r17, r24
     a98:	c6 2f       	mov	r28, r22
     a9a:	d4 2f       	mov	r29, r20
	for(uint8_t xi=x1;xi <= x2; xi++)
     a9c:	06 c0       	rjmp	.+12     	; 0xaaa <nokia_lcd_draw_Hline+0x1a>
	{
		nokia_lcd_set_pixel(xi, y1, 1);
     a9e:	41 e0       	ldi	r20, 0x01	; 1
     aa0:	61 2f       	mov	r22, r17
     aa2:	8c 2f       	mov	r24, r28
     aa4:	0e 94 86 04 	call	0x90c	; 0x90c <nokia_lcd_set_pixel>
		nokia_lcd_write_char(*str++, scale);
}

void nokia_lcd_draw_Hline(uint8_t y1, uint8_t x1, uint8_t x2) /*Função para desenha linha veritical*/
{
	for(uint8_t xi=x1;xi <= x2; xi++)
     aa8:	cf 5f       	subi	r28, 0xFF	; 255
     aaa:	dc 17       	cp	r29, r28
     aac:	c0 f7       	brcc	.-16     	; 0xa9e <nokia_lcd_draw_Hline+0xe>
	{
		nokia_lcd_set_pixel(xi, y1, 1);
	}
}
     aae:	df 91       	pop	r29
     ab0:	cf 91       	pop	r28
     ab2:	1f 91       	pop	r17
     ab4:	08 95       	ret

00000ab6 <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
     ab6:	80 93 34 03 	sts	0x0334, r24	; 0x800334 <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
     aba:	60 93 35 03 	sts	0x0335, r22	; 0x800335 <nokia_lcd+0x1f9>
     abe:	08 95       	ret

00000ac0 <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
     ac0:	cf 93       	push	r28
     ac2:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
     ac4:	80 e8       	ldi	r24, 0x80	; 128
     ac6:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>
	write_cmd(0x40);
     aca:	80 e4       	ldi	r24, 0x40	; 64
     acc:	0e 94 0f 04 	call	0x81e	; 0x81e <write_cmd>

	/* Write screen to display */
	for (i = 0; i < 504; i++)
     ad0:	c0 e0       	ldi	r28, 0x00	; 0
     ad2:	d0 e0       	ldi	r29, 0x00	; 0
     ad4:	07 c0       	rjmp	.+14     	; 0xae4 <nokia_lcd_render+0x24>
		write_data(nokia_lcd.screen[i]);
     ad6:	fe 01       	movw	r30, r28
     ad8:	e4 5c       	subi	r30, 0xC4	; 196
     ada:	fe 4f       	sbci	r31, 0xFE	; 254
     adc:	80 81       	ld	r24, Z
     ade:	0e 94 13 04 	call	0x826	; 0x826 <write_data>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
     ae2:	21 96       	adiw	r28, 0x01	; 1
     ae4:	c8 3f       	cpi	r28, 0xF8	; 248
     ae6:	81 e0       	ldi	r24, 0x01	; 1
     ae8:	d8 07       	cpc	r29, r24
     aea:	a8 f3       	brcs	.-22     	; 0xad6 <nokia_lcd_render+0x16>
		write_data(nokia_lcd.screen[i]);
}
     aec:	df 91       	pop	r29
     aee:	cf 91       	pop	r28
     af0:	08 95       	ret

00000af2 <__subsf3>:
     af2:	50 58       	subi	r21, 0x80	; 128

00000af4 <__addsf3>:
     af4:	bb 27       	eor	r27, r27
     af6:	aa 27       	eor	r26, r26
     af8:	0e 94 91 05 	call	0xb22	; 0xb22 <__addsf3x>
     afc:	0c 94 db 06 	jmp	0xdb6	; 0xdb6 <__fp_round>
     b00:	0e 94 cd 06 	call	0xd9a	; 0xd9a <__fp_pscA>
     b04:	38 f0       	brcs	.+14     	; 0xb14 <__addsf3+0x20>
     b06:	0e 94 d4 06 	call	0xda8	; 0xda8 <__fp_pscB>
     b0a:	20 f0       	brcs	.+8      	; 0xb14 <__addsf3+0x20>
     b0c:	39 f4       	brne	.+14     	; 0xb1c <__addsf3+0x28>
     b0e:	9f 3f       	cpi	r25, 0xFF	; 255
     b10:	19 f4       	brne	.+6      	; 0xb18 <__addsf3+0x24>
     b12:	26 f4       	brtc	.+8      	; 0xb1c <__addsf3+0x28>
     b14:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <__fp_nan>
     b18:	0e f4       	brtc	.+2      	; 0xb1c <__addsf3+0x28>
     b1a:	e0 95       	com	r30
     b1c:	e7 fb       	bst	r30, 7
     b1e:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__fp_inf>

00000b22 <__addsf3x>:
     b22:	e9 2f       	mov	r30, r25
     b24:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <__fp_split3>
     b28:	58 f3       	brcs	.-42     	; 0xb00 <__addsf3+0xc>
     b2a:	ba 17       	cp	r27, r26
     b2c:	62 07       	cpc	r22, r18
     b2e:	73 07       	cpc	r23, r19
     b30:	84 07       	cpc	r24, r20
     b32:	95 07       	cpc	r25, r21
     b34:	20 f0       	brcs	.+8      	; 0xb3e <__addsf3x+0x1c>
     b36:	79 f4       	brne	.+30     	; 0xb56 <__addsf3x+0x34>
     b38:	a6 f5       	brtc	.+104    	; 0xba2 <__addsf3x+0x80>
     b3a:	0c 94 0e 07 	jmp	0xe1c	; 0xe1c <__fp_zero>
     b3e:	0e f4       	brtc	.+2      	; 0xb42 <__addsf3x+0x20>
     b40:	e0 95       	com	r30
     b42:	0b 2e       	mov	r0, r27
     b44:	ba 2f       	mov	r27, r26
     b46:	a0 2d       	mov	r26, r0
     b48:	0b 01       	movw	r0, r22
     b4a:	b9 01       	movw	r22, r18
     b4c:	90 01       	movw	r18, r0
     b4e:	0c 01       	movw	r0, r24
     b50:	ca 01       	movw	r24, r20
     b52:	a0 01       	movw	r20, r0
     b54:	11 24       	eor	r1, r1
     b56:	ff 27       	eor	r31, r31
     b58:	59 1b       	sub	r21, r25
     b5a:	99 f0       	breq	.+38     	; 0xb82 <__addsf3x+0x60>
     b5c:	59 3f       	cpi	r21, 0xF9	; 249
     b5e:	50 f4       	brcc	.+20     	; 0xb74 <__addsf3x+0x52>
     b60:	50 3e       	cpi	r21, 0xE0	; 224
     b62:	68 f1       	brcs	.+90     	; 0xbbe <__addsf3x+0x9c>
     b64:	1a 16       	cp	r1, r26
     b66:	f0 40       	sbci	r31, 0x00	; 0
     b68:	a2 2f       	mov	r26, r18
     b6a:	23 2f       	mov	r18, r19
     b6c:	34 2f       	mov	r19, r20
     b6e:	44 27       	eor	r20, r20
     b70:	58 5f       	subi	r21, 0xF8	; 248
     b72:	f3 cf       	rjmp	.-26     	; 0xb5a <__addsf3x+0x38>
     b74:	46 95       	lsr	r20
     b76:	37 95       	ror	r19
     b78:	27 95       	ror	r18
     b7a:	a7 95       	ror	r26
     b7c:	f0 40       	sbci	r31, 0x00	; 0
     b7e:	53 95       	inc	r21
     b80:	c9 f7       	brne	.-14     	; 0xb74 <__addsf3x+0x52>
     b82:	7e f4       	brtc	.+30     	; 0xba2 <__addsf3x+0x80>
     b84:	1f 16       	cp	r1, r31
     b86:	ba 0b       	sbc	r27, r26
     b88:	62 0b       	sbc	r22, r18
     b8a:	73 0b       	sbc	r23, r19
     b8c:	84 0b       	sbc	r24, r20
     b8e:	ba f0       	brmi	.+46     	; 0xbbe <__addsf3x+0x9c>
     b90:	91 50       	subi	r25, 0x01	; 1
     b92:	a1 f0       	breq	.+40     	; 0xbbc <__addsf3x+0x9a>
     b94:	ff 0f       	add	r31, r31
     b96:	bb 1f       	adc	r27, r27
     b98:	66 1f       	adc	r22, r22
     b9a:	77 1f       	adc	r23, r23
     b9c:	88 1f       	adc	r24, r24
     b9e:	c2 f7       	brpl	.-16     	; 0xb90 <__addsf3x+0x6e>
     ba0:	0e c0       	rjmp	.+28     	; 0xbbe <__addsf3x+0x9c>
     ba2:	ba 0f       	add	r27, r26
     ba4:	62 1f       	adc	r22, r18
     ba6:	73 1f       	adc	r23, r19
     ba8:	84 1f       	adc	r24, r20
     baa:	48 f4       	brcc	.+18     	; 0xbbe <__addsf3x+0x9c>
     bac:	87 95       	ror	r24
     bae:	77 95       	ror	r23
     bb0:	67 95       	ror	r22
     bb2:	b7 95       	ror	r27
     bb4:	f7 95       	ror	r31
     bb6:	9e 3f       	cpi	r25, 0xFE	; 254
     bb8:	08 f0       	brcs	.+2      	; 0xbbc <__addsf3x+0x9a>
     bba:	b0 cf       	rjmp	.-160    	; 0xb1c <__addsf3+0x28>
     bbc:	93 95       	inc	r25
     bbe:	88 0f       	add	r24, r24
     bc0:	08 f0       	brcs	.+2      	; 0xbc4 <__addsf3x+0xa2>
     bc2:	99 27       	eor	r25, r25
     bc4:	ee 0f       	add	r30, r30
     bc6:	97 95       	ror	r25
     bc8:	87 95       	ror	r24
     bca:	08 95       	ret

00000bcc <__divsf3>:
     bcc:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__divsf3x>
     bd0:	0c 94 db 06 	jmp	0xdb6	; 0xdb6 <__fp_round>
     bd4:	0e 94 d4 06 	call	0xda8	; 0xda8 <__fp_pscB>
     bd8:	58 f0       	brcs	.+22     	; 0xbf0 <__divsf3+0x24>
     bda:	0e 94 cd 06 	call	0xd9a	; 0xd9a <__fp_pscA>
     bde:	40 f0       	brcs	.+16     	; 0xbf0 <__divsf3+0x24>
     be0:	29 f4       	brne	.+10     	; 0xbec <__divsf3+0x20>
     be2:	5f 3f       	cpi	r21, 0xFF	; 255
     be4:	29 f0       	breq	.+10     	; 0xbf0 <__divsf3+0x24>
     be6:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__fp_inf>
     bea:	51 11       	cpse	r21, r1
     bec:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__fp_szero>
     bf0:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <__fp_nan>

00000bf4 <__divsf3x>:
     bf4:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <__fp_split3>
     bf8:	68 f3       	brcs	.-38     	; 0xbd4 <__divsf3+0x8>

00000bfa <__divsf3_pse>:
     bfa:	99 23       	and	r25, r25
     bfc:	b1 f3       	breq	.-20     	; 0xbea <__divsf3+0x1e>
     bfe:	55 23       	and	r21, r21
     c00:	91 f3       	breq	.-28     	; 0xbe6 <__divsf3+0x1a>
     c02:	95 1b       	sub	r25, r21
     c04:	55 0b       	sbc	r21, r21
     c06:	bb 27       	eor	r27, r27
     c08:	aa 27       	eor	r26, r26
     c0a:	62 17       	cp	r22, r18
     c0c:	73 07       	cpc	r23, r19
     c0e:	84 07       	cpc	r24, r20
     c10:	38 f0       	brcs	.+14     	; 0xc20 <__divsf3_pse+0x26>
     c12:	9f 5f       	subi	r25, 0xFF	; 255
     c14:	5f 4f       	sbci	r21, 0xFF	; 255
     c16:	22 0f       	add	r18, r18
     c18:	33 1f       	adc	r19, r19
     c1a:	44 1f       	adc	r20, r20
     c1c:	aa 1f       	adc	r26, r26
     c1e:	a9 f3       	breq	.-22     	; 0xc0a <__divsf3_pse+0x10>
     c20:	35 d0       	rcall	.+106    	; 0xc8c <__divsf3_pse+0x92>
     c22:	0e 2e       	mov	r0, r30
     c24:	3a f0       	brmi	.+14     	; 0xc34 <__divsf3_pse+0x3a>
     c26:	e0 e8       	ldi	r30, 0x80	; 128
     c28:	32 d0       	rcall	.+100    	; 0xc8e <__divsf3_pse+0x94>
     c2a:	91 50       	subi	r25, 0x01	; 1
     c2c:	50 40       	sbci	r21, 0x00	; 0
     c2e:	e6 95       	lsr	r30
     c30:	00 1c       	adc	r0, r0
     c32:	ca f7       	brpl	.-14     	; 0xc26 <__divsf3_pse+0x2c>
     c34:	2b d0       	rcall	.+86     	; 0xc8c <__divsf3_pse+0x92>
     c36:	fe 2f       	mov	r31, r30
     c38:	29 d0       	rcall	.+82     	; 0xc8c <__divsf3_pse+0x92>
     c3a:	66 0f       	add	r22, r22
     c3c:	77 1f       	adc	r23, r23
     c3e:	88 1f       	adc	r24, r24
     c40:	bb 1f       	adc	r27, r27
     c42:	26 17       	cp	r18, r22
     c44:	37 07       	cpc	r19, r23
     c46:	48 07       	cpc	r20, r24
     c48:	ab 07       	cpc	r26, r27
     c4a:	b0 e8       	ldi	r27, 0x80	; 128
     c4c:	09 f0       	breq	.+2      	; 0xc50 <__divsf3_pse+0x56>
     c4e:	bb 0b       	sbc	r27, r27
     c50:	80 2d       	mov	r24, r0
     c52:	bf 01       	movw	r22, r30
     c54:	ff 27       	eor	r31, r31
     c56:	93 58       	subi	r25, 0x83	; 131
     c58:	5f 4f       	sbci	r21, 0xFF	; 255
     c5a:	3a f0       	brmi	.+14     	; 0xc6a <__divsf3_pse+0x70>
     c5c:	9e 3f       	cpi	r25, 0xFE	; 254
     c5e:	51 05       	cpc	r21, r1
     c60:	78 f0       	brcs	.+30     	; 0xc80 <__divsf3_pse+0x86>
     c62:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__fp_inf>
     c66:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__fp_szero>
     c6a:	5f 3f       	cpi	r21, 0xFF	; 255
     c6c:	e4 f3       	brlt	.-8      	; 0xc66 <__divsf3_pse+0x6c>
     c6e:	98 3e       	cpi	r25, 0xE8	; 232
     c70:	d4 f3       	brlt	.-12     	; 0xc66 <__divsf3_pse+0x6c>
     c72:	86 95       	lsr	r24
     c74:	77 95       	ror	r23
     c76:	67 95       	ror	r22
     c78:	b7 95       	ror	r27
     c7a:	f7 95       	ror	r31
     c7c:	9f 5f       	subi	r25, 0xFF	; 255
     c7e:	c9 f7       	brne	.-14     	; 0xc72 <__divsf3_pse+0x78>
     c80:	88 0f       	add	r24, r24
     c82:	91 1d       	adc	r25, r1
     c84:	96 95       	lsr	r25
     c86:	87 95       	ror	r24
     c88:	97 f9       	bld	r25, 7
     c8a:	08 95       	ret
     c8c:	e1 e0       	ldi	r30, 0x01	; 1
     c8e:	66 0f       	add	r22, r22
     c90:	77 1f       	adc	r23, r23
     c92:	88 1f       	adc	r24, r24
     c94:	bb 1f       	adc	r27, r27
     c96:	62 17       	cp	r22, r18
     c98:	73 07       	cpc	r23, r19
     c9a:	84 07       	cpc	r24, r20
     c9c:	ba 07       	cpc	r27, r26
     c9e:	20 f0       	brcs	.+8      	; 0xca8 <__divsf3_pse+0xae>
     ca0:	62 1b       	sub	r22, r18
     ca2:	73 0b       	sbc	r23, r19
     ca4:	84 0b       	sbc	r24, r20
     ca6:	ba 0b       	sbc	r27, r26
     ca8:	ee 1f       	adc	r30, r30
     caa:	88 f7       	brcc	.-30     	; 0xc8e <__divsf3_pse+0x94>
     cac:	e0 95       	com	r30
     cae:	08 95       	ret

00000cb0 <__fixunssfsi>:
     cb0:	0e 94 f4 06 	call	0xde8	; 0xde8 <__fp_splitA>
     cb4:	88 f0       	brcs	.+34     	; 0xcd8 <__fixunssfsi+0x28>
     cb6:	9f 57       	subi	r25, 0x7F	; 127
     cb8:	98 f0       	brcs	.+38     	; 0xce0 <__fixunssfsi+0x30>
     cba:	b9 2f       	mov	r27, r25
     cbc:	99 27       	eor	r25, r25
     cbe:	b7 51       	subi	r27, 0x17	; 23
     cc0:	b0 f0       	brcs	.+44     	; 0xcee <__fixunssfsi+0x3e>
     cc2:	e1 f0       	breq	.+56     	; 0xcfc <__fixunssfsi+0x4c>
     cc4:	66 0f       	add	r22, r22
     cc6:	77 1f       	adc	r23, r23
     cc8:	88 1f       	adc	r24, r24
     cca:	99 1f       	adc	r25, r25
     ccc:	1a f0       	brmi	.+6      	; 0xcd4 <__fixunssfsi+0x24>
     cce:	ba 95       	dec	r27
     cd0:	c9 f7       	brne	.-14     	; 0xcc4 <__fixunssfsi+0x14>
     cd2:	14 c0       	rjmp	.+40     	; 0xcfc <__fixunssfsi+0x4c>
     cd4:	b1 30       	cpi	r27, 0x01	; 1
     cd6:	91 f0       	breq	.+36     	; 0xcfc <__fixunssfsi+0x4c>
     cd8:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__fp_zero>
     cdc:	b1 e0       	ldi	r27, 0x01	; 1
     cde:	08 95       	ret
     ce0:	0c 94 0e 07 	jmp	0xe1c	; 0xe1c <__fp_zero>
     ce4:	67 2f       	mov	r22, r23
     ce6:	78 2f       	mov	r23, r24
     ce8:	88 27       	eor	r24, r24
     cea:	b8 5f       	subi	r27, 0xF8	; 248
     cec:	39 f0       	breq	.+14     	; 0xcfc <__fixunssfsi+0x4c>
     cee:	b9 3f       	cpi	r27, 0xF9	; 249
     cf0:	cc f3       	brlt	.-14     	; 0xce4 <__fixunssfsi+0x34>
     cf2:	86 95       	lsr	r24
     cf4:	77 95       	ror	r23
     cf6:	67 95       	ror	r22
     cf8:	b3 95       	inc	r27
     cfa:	d9 f7       	brne	.-10     	; 0xcf2 <__fixunssfsi+0x42>
     cfc:	3e f4       	brtc	.+14     	; 0xd0c <__fixunssfsi+0x5c>
     cfe:	90 95       	com	r25
     d00:	80 95       	com	r24
     d02:	70 95       	com	r23
     d04:	61 95       	neg	r22
     d06:	7f 4f       	sbci	r23, 0xFF	; 255
     d08:	8f 4f       	sbci	r24, 0xFF	; 255
     d0a:	9f 4f       	sbci	r25, 0xFF	; 255
     d0c:	08 95       	ret

00000d0e <__floatunsisf>:
     d0e:	e8 94       	clt
     d10:	09 c0       	rjmp	.+18     	; 0xd24 <__floatsisf+0x12>

00000d12 <__floatsisf>:
     d12:	97 fb       	bst	r25, 7
     d14:	3e f4       	brtc	.+14     	; 0xd24 <__floatsisf+0x12>
     d16:	90 95       	com	r25
     d18:	80 95       	com	r24
     d1a:	70 95       	com	r23
     d1c:	61 95       	neg	r22
     d1e:	7f 4f       	sbci	r23, 0xFF	; 255
     d20:	8f 4f       	sbci	r24, 0xFF	; 255
     d22:	9f 4f       	sbci	r25, 0xFF	; 255
     d24:	99 23       	and	r25, r25
     d26:	a9 f0       	breq	.+42     	; 0xd52 <__floatsisf+0x40>
     d28:	f9 2f       	mov	r31, r25
     d2a:	96 e9       	ldi	r25, 0x96	; 150
     d2c:	bb 27       	eor	r27, r27
     d2e:	93 95       	inc	r25
     d30:	f6 95       	lsr	r31
     d32:	87 95       	ror	r24
     d34:	77 95       	ror	r23
     d36:	67 95       	ror	r22
     d38:	b7 95       	ror	r27
     d3a:	f1 11       	cpse	r31, r1
     d3c:	f8 cf       	rjmp	.-16     	; 0xd2e <__floatsisf+0x1c>
     d3e:	fa f4       	brpl	.+62     	; 0xd7e <__floatsisf+0x6c>
     d40:	bb 0f       	add	r27, r27
     d42:	11 f4       	brne	.+4      	; 0xd48 <__floatsisf+0x36>
     d44:	60 ff       	sbrs	r22, 0
     d46:	1b c0       	rjmp	.+54     	; 0xd7e <__floatsisf+0x6c>
     d48:	6f 5f       	subi	r22, 0xFF	; 255
     d4a:	7f 4f       	sbci	r23, 0xFF	; 255
     d4c:	8f 4f       	sbci	r24, 0xFF	; 255
     d4e:	9f 4f       	sbci	r25, 0xFF	; 255
     d50:	16 c0       	rjmp	.+44     	; 0xd7e <__floatsisf+0x6c>
     d52:	88 23       	and	r24, r24
     d54:	11 f0       	breq	.+4      	; 0xd5a <__floatsisf+0x48>
     d56:	96 e9       	ldi	r25, 0x96	; 150
     d58:	11 c0       	rjmp	.+34     	; 0xd7c <__floatsisf+0x6a>
     d5a:	77 23       	and	r23, r23
     d5c:	21 f0       	breq	.+8      	; 0xd66 <__floatsisf+0x54>
     d5e:	9e e8       	ldi	r25, 0x8E	; 142
     d60:	87 2f       	mov	r24, r23
     d62:	76 2f       	mov	r23, r22
     d64:	05 c0       	rjmp	.+10     	; 0xd70 <__floatsisf+0x5e>
     d66:	66 23       	and	r22, r22
     d68:	71 f0       	breq	.+28     	; 0xd86 <__floatsisf+0x74>
     d6a:	96 e8       	ldi	r25, 0x86	; 134
     d6c:	86 2f       	mov	r24, r22
     d6e:	70 e0       	ldi	r23, 0x00	; 0
     d70:	60 e0       	ldi	r22, 0x00	; 0
     d72:	2a f0       	brmi	.+10     	; 0xd7e <__floatsisf+0x6c>
     d74:	9a 95       	dec	r25
     d76:	66 0f       	add	r22, r22
     d78:	77 1f       	adc	r23, r23
     d7a:	88 1f       	adc	r24, r24
     d7c:	da f7       	brpl	.-10     	; 0xd74 <__floatsisf+0x62>
     d7e:	88 0f       	add	r24, r24
     d80:	96 95       	lsr	r25
     d82:	87 95       	ror	r24
     d84:	97 f9       	bld	r25, 7
     d86:	08 95       	ret

00000d88 <__fp_inf>:
     d88:	97 f9       	bld	r25, 7
     d8a:	9f 67       	ori	r25, 0x7F	; 127
     d8c:	80 e8       	ldi	r24, 0x80	; 128
     d8e:	70 e0       	ldi	r23, 0x00	; 0
     d90:	60 e0       	ldi	r22, 0x00	; 0
     d92:	08 95       	ret

00000d94 <__fp_nan>:
     d94:	9f ef       	ldi	r25, 0xFF	; 255
     d96:	80 ec       	ldi	r24, 0xC0	; 192
     d98:	08 95       	ret

00000d9a <__fp_pscA>:
     d9a:	00 24       	eor	r0, r0
     d9c:	0a 94       	dec	r0
     d9e:	16 16       	cp	r1, r22
     da0:	17 06       	cpc	r1, r23
     da2:	18 06       	cpc	r1, r24
     da4:	09 06       	cpc	r0, r25
     da6:	08 95       	ret

00000da8 <__fp_pscB>:
     da8:	00 24       	eor	r0, r0
     daa:	0a 94       	dec	r0
     dac:	12 16       	cp	r1, r18
     dae:	13 06       	cpc	r1, r19
     db0:	14 06       	cpc	r1, r20
     db2:	05 06       	cpc	r0, r21
     db4:	08 95       	ret

00000db6 <__fp_round>:
     db6:	09 2e       	mov	r0, r25
     db8:	03 94       	inc	r0
     dba:	00 0c       	add	r0, r0
     dbc:	11 f4       	brne	.+4      	; 0xdc2 <__fp_round+0xc>
     dbe:	88 23       	and	r24, r24
     dc0:	52 f0       	brmi	.+20     	; 0xdd6 <__fp_round+0x20>
     dc2:	bb 0f       	add	r27, r27
     dc4:	40 f4       	brcc	.+16     	; 0xdd6 <__fp_round+0x20>
     dc6:	bf 2b       	or	r27, r31
     dc8:	11 f4       	brne	.+4      	; 0xdce <__fp_round+0x18>
     dca:	60 ff       	sbrs	r22, 0
     dcc:	04 c0       	rjmp	.+8      	; 0xdd6 <__fp_round+0x20>
     dce:	6f 5f       	subi	r22, 0xFF	; 255
     dd0:	7f 4f       	sbci	r23, 0xFF	; 255
     dd2:	8f 4f       	sbci	r24, 0xFF	; 255
     dd4:	9f 4f       	sbci	r25, 0xFF	; 255
     dd6:	08 95       	ret

00000dd8 <__fp_split3>:
     dd8:	57 fd       	sbrc	r21, 7
     dda:	90 58       	subi	r25, 0x80	; 128
     ddc:	44 0f       	add	r20, r20
     dde:	55 1f       	adc	r21, r21
     de0:	59 f0       	breq	.+22     	; 0xdf8 <__fp_splitA+0x10>
     de2:	5f 3f       	cpi	r21, 0xFF	; 255
     de4:	71 f0       	breq	.+28     	; 0xe02 <__fp_splitA+0x1a>
     de6:	47 95       	ror	r20

00000de8 <__fp_splitA>:
     de8:	88 0f       	add	r24, r24
     dea:	97 fb       	bst	r25, 7
     dec:	99 1f       	adc	r25, r25
     dee:	61 f0       	breq	.+24     	; 0xe08 <__fp_splitA+0x20>
     df0:	9f 3f       	cpi	r25, 0xFF	; 255
     df2:	79 f0       	breq	.+30     	; 0xe12 <__fp_splitA+0x2a>
     df4:	87 95       	ror	r24
     df6:	08 95       	ret
     df8:	12 16       	cp	r1, r18
     dfa:	13 06       	cpc	r1, r19
     dfc:	14 06       	cpc	r1, r20
     dfe:	55 1f       	adc	r21, r21
     e00:	f2 cf       	rjmp	.-28     	; 0xde6 <__fp_split3+0xe>
     e02:	46 95       	lsr	r20
     e04:	f1 df       	rcall	.-30     	; 0xde8 <__fp_splitA>
     e06:	08 c0       	rjmp	.+16     	; 0xe18 <__fp_splitA+0x30>
     e08:	16 16       	cp	r1, r22
     e0a:	17 06       	cpc	r1, r23
     e0c:	18 06       	cpc	r1, r24
     e0e:	99 1f       	adc	r25, r25
     e10:	f1 cf       	rjmp	.-30     	; 0xdf4 <__fp_splitA+0xc>
     e12:	86 95       	lsr	r24
     e14:	71 05       	cpc	r23, r1
     e16:	61 05       	cpc	r22, r1
     e18:	08 94       	sec
     e1a:	08 95       	ret

00000e1c <__fp_zero>:
     e1c:	e8 94       	clt

00000e1e <__fp_szero>:
     e1e:	bb 27       	eor	r27, r27
     e20:	66 27       	eor	r22, r22
     e22:	77 27       	eor	r23, r23
     e24:	cb 01       	movw	r24, r22
     e26:	97 f9       	bld	r25, 7
     e28:	08 95       	ret

00000e2a <__mulsf3>:
     e2a:	0e 94 28 07 	call	0xe50	; 0xe50 <__mulsf3x>
     e2e:	0c 94 db 06 	jmp	0xdb6	; 0xdb6 <__fp_round>
     e32:	0e 94 cd 06 	call	0xd9a	; 0xd9a <__fp_pscA>
     e36:	38 f0       	brcs	.+14     	; 0xe46 <__mulsf3+0x1c>
     e38:	0e 94 d4 06 	call	0xda8	; 0xda8 <__fp_pscB>
     e3c:	20 f0       	brcs	.+8      	; 0xe46 <__mulsf3+0x1c>
     e3e:	95 23       	and	r25, r21
     e40:	11 f0       	breq	.+4      	; 0xe46 <__mulsf3+0x1c>
     e42:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__fp_inf>
     e46:	0c 94 ca 06 	jmp	0xd94	; 0xd94 <__fp_nan>
     e4a:	11 24       	eor	r1, r1
     e4c:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__fp_szero>

00000e50 <__mulsf3x>:
     e50:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <__fp_split3>
     e54:	70 f3       	brcs	.-36     	; 0xe32 <__mulsf3+0x8>

00000e56 <__mulsf3_pse>:
     e56:	95 9f       	mul	r25, r21
     e58:	c1 f3       	breq	.-16     	; 0xe4a <__mulsf3+0x20>
     e5a:	95 0f       	add	r25, r21
     e5c:	50 e0       	ldi	r21, 0x00	; 0
     e5e:	55 1f       	adc	r21, r21
     e60:	62 9f       	mul	r22, r18
     e62:	f0 01       	movw	r30, r0
     e64:	72 9f       	mul	r23, r18
     e66:	bb 27       	eor	r27, r27
     e68:	f0 0d       	add	r31, r0
     e6a:	b1 1d       	adc	r27, r1
     e6c:	63 9f       	mul	r22, r19
     e6e:	aa 27       	eor	r26, r26
     e70:	f0 0d       	add	r31, r0
     e72:	b1 1d       	adc	r27, r1
     e74:	aa 1f       	adc	r26, r26
     e76:	64 9f       	mul	r22, r20
     e78:	66 27       	eor	r22, r22
     e7a:	b0 0d       	add	r27, r0
     e7c:	a1 1d       	adc	r26, r1
     e7e:	66 1f       	adc	r22, r22
     e80:	82 9f       	mul	r24, r18
     e82:	22 27       	eor	r18, r18
     e84:	b0 0d       	add	r27, r0
     e86:	a1 1d       	adc	r26, r1
     e88:	62 1f       	adc	r22, r18
     e8a:	73 9f       	mul	r23, r19
     e8c:	b0 0d       	add	r27, r0
     e8e:	a1 1d       	adc	r26, r1
     e90:	62 1f       	adc	r22, r18
     e92:	83 9f       	mul	r24, r19
     e94:	a0 0d       	add	r26, r0
     e96:	61 1d       	adc	r22, r1
     e98:	22 1f       	adc	r18, r18
     e9a:	74 9f       	mul	r23, r20
     e9c:	33 27       	eor	r19, r19
     e9e:	a0 0d       	add	r26, r0
     ea0:	61 1d       	adc	r22, r1
     ea2:	23 1f       	adc	r18, r19
     ea4:	84 9f       	mul	r24, r20
     ea6:	60 0d       	add	r22, r0
     ea8:	21 1d       	adc	r18, r1
     eaa:	82 2f       	mov	r24, r18
     eac:	76 2f       	mov	r23, r22
     eae:	6a 2f       	mov	r22, r26
     eb0:	11 24       	eor	r1, r1
     eb2:	9f 57       	subi	r25, 0x7F	; 127
     eb4:	50 40       	sbci	r21, 0x00	; 0
     eb6:	9a f0       	brmi	.+38     	; 0xede <__mulsf3_pse+0x88>
     eb8:	f1 f0       	breq	.+60     	; 0xef6 <__mulsf3_pse+0xa0>
     eba:	88 23       	and	r24, r24
     ebc:	4a f0       	brmi	.+18     	; 0xed0 <__mulsf3_pse+0x7a>
     ebe:	ee 0f       	add	r30, r30
     ec0:	ff 1f       	adc	r31, r31
     ec2:	bb 1f       	adc	r27, r27
     ec4:	66 1f       	adc	r22, r22
     ec6:	77 1f       	adc	r23, r23
     ec8:	88 1f       	adc	r24, r24
     eca:	91 50       	subi	r25, 0x01	; 1
     ecc:	50 40       	sbci	r21, 0x00	; 0
     ece:	a9 f7       	brne	.-22     	; 0xeba <__mulsf3_pse+0x64>
     ed0:	9e 3f       	cpi	r25, 0xFE	; 254
     ed2:	51 05       	cpc	r21, r1
     ed4:	80 f0       	brcs	.+32     	; 0xef6 <__mulsf3_pse+0xa0>
     ed6:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__fp_inf>
     eda:	0c 94 0f 07 	jmp	0xe1e	; 0xe1e <__fp_szero>
     ede:	5f 3f       	cpi	r21, 0xFF	; 255
     ee0:	e4 f3       	brlt	.-8      	; 0xeda <__mulsf3_pse+0x84>
     ee2:	98 3e       	cpi	r25, 0xE8	; 232
     ee4:	d4 f3       	brlt	.-12     	; 0xeda <__mulsf3_pse+0x84>
     ee6:	86 95       	lsr	r24
     ee8:	77 95       	ror	r23
     eea:	67 95       	ror	r22
     eec:	b7 95       	ror	r27
     eee:	f7 95       	ror	r31
     ef0:	e7 95       	ror	r30
     ef2:	9f 5f       	subi	r25, 0xFF	; 255
     ef4:	c1 f7       	brne	.-16     	; 0xee6 <__mulsf3_pse+0x90>
     ef6:	fe 2b       	or	r31, r30
     ef8:	88 0f       	add	r24, r24
     efa:	91 1d       	adc	r25, r1
     efc:	96 95       	lsr	r25
     efe:	87 95       	ror	r24
     f00:	97 f9       	bld	r25, 7
     f02:	08 95       	ret

00000f04 <__udivmodqi4>:
     f04:	99 1b       	sub	r25, r25
     f06:	79 e0       	ldi	r23, 0x09	; 9
     f08:	04 c0       	rjmp	.+8      	; 0xf12 <__udivmodqi4_ep>

00000f0a <__udivmodqi4_loop>:
     f0a:	99 1f       	adc	r25, r25
     f0c:	96 17       	cp	r25, r22
     f0e:	08 f0       	brcs	.+2      	; 0xf12 <__udivmodqi4_ep>
     f10:	96 1b       	sub	r25, r22

00000f12 <__udivmodqi4_ep>:
     f12:	88 1f       	adc	r24, r24
     f14:	7a 95       	dec	r23
     f16:	c9 f7       	brne	.-14     	; 0xf0a <__udivmodqi4_loop>
     f18:	80 95       	com	r24
     f1a:	08 95       	ret

00000f1c <__udivmodsi4>:
     f1c:	a1 e2       	ldi	r26, 0x21	; 33
     f1e:	1a 2e       	mov	r1, r26
     f20:	aa 1b       	sub	r26, r26
     f22:	bb 1b       	sub	r27, r27
     f24:	fd 01       	movw	r30, r26
     f26:	0d c0       	rjmp	.+26     	; 0xf42 <__udivmodsi4_ep>

00000f28 <__udivmodsi4_loop>:
     f28:	aa 1f       	adc	r26, r26
     f2a:	bb 1f       	adc	r27, r27
     f2c:	ee 1f       	adc	r30, r30
     f2e:	ff 1f       	adc	r31, r31
     f30:	a2 17       	cp	r26, r18
     f32:	b3 07       	cpc	r27, r19
     f34:	e4 07       	cpc	r30, r20
     f36:	f5 07       	cpc	r31, r21
     f38:	20 f0       	brcs	.+8      	; 0xf42 <__udivmodsi4_ep>
     f3a:	a2 1b       	sub	r26, r18
     f3c:	b3 0b       	sbc	r27, r19
     f3e:	e4 0b       	sbc	r30, r20
     f40:	f5 0b       	sbc	r31, r21

00000f42 <__udivmodsi4_ep>:
     f42:	66 1f       	adc	r22, r22
     f44:	77 1f       	adc	r23, r23
     f46:	88 1f       	adc	r24, r24
     f48:	99 1f       	adc	r25, r25
     f4a:	1a 94       	dec	r1
     f4c:	69 f7       	brne	.-38     	; 0xf28 <__udivmodsi4_loop>
     f4e:	60 95       	com	r22
     f50:	70 95       	com	r23
     f52:	80 95       	com	r24
     f54:	90 95       	com	r25
     f56:	9b 01       	movw	r18, r22
     f58:	ac 01       	movw	r20, r24
     f5a:	bd 01       	movw	r22, r26
     f5c:	cf 01       	movw	r24, r30
     f5e:	08 95       	ret

00000f60 <__divmodsi4>:
     f60:	05 2e       	mov	r0, r21
     f62:	97 fb       	bst	r25, 7
     f64:	1e f4       	brtc	.+6      	; 0xf6c <__divmodsi4+0xc>
     f66:	00 94       	com	r0
     f68:	0e 94 c7 07 	call	0xf8e	; 0xf8e <__negsi2>
     f6c:	57 fd       	sbrc	r21, 7
     f6e:	07 d0       	rcall	.+14     	; 0xf7e <__divmodsi4_neg2>
     f70:	0e 94 8e 07 	call	0xf1c	; 0xf1c <__udivmodsi4>
     f74:	07 fc       	sbrc	r0, 7
     f76:	03 d0       	rcall	.+6      	; 0xf7e <__divmodsi4_neg2>
     f78:	4e f4       	brtc	.+18     	; 0xf8c <__divmodsi4_exit>
     f7a:	0c 94 c7 07 	jmp	0xf8e	; 0xf8e <__negsi2>

00000f7e <__divmodsi4_neg2>:
     f7e:	50 95       	com	r21
     f80:	40 95       	com	r20
     f82:	30 95       	com	r19
     f84:	21 95       	neg	r18
     f86:	3f 4f       	sbci	r19, 0xFF	; 255
     f88:	4f 4f       	sbci	r20, 0xFF	; 255
     f8a:	5f 4f       	sbci	r21, 0xFF	; 255

00000f8c <__divmodsi4_exit>:
     f8c:	08 95       	ret

00000f8e <__negsi2>:
     f8e:	90 95       	com	r25
     f90:	80 95       	com	r24
     f92:	70 95       	com	r23
     f94:	61 95       	neg	r22
     f96:	7f 4f       	sbci	r23, 0xFF	; 255
     f98:	8f 4f       	sbci	r24, 0xFF	; 255
     f9a:	9f 4f       	sbci	r25, 0xFF	; 255
     f9c:	08 95       	ret

00000f9e <__umulhisi3>:
     f9e:	a2 9f       	mul	r26, r18
     fa0:	b0 01       	movw	r22, r0
     fa2:	b3 9f       	mul	r27, r19
     fa4:	c0 01       	movw	r24, r0
     fa6:	a3 9f       	mul	r26, r19
     fa8:	70 0d       	add	r23, r0
     faa:	81 1d       	adc	r24, r1
     fac:	11 24       	eor	r1, r1
     fae:	91 1d       	adc	r25, r1
     fb0:	b2 9f       	mul	r27, r18
     fb2:	70 0d       	add	r23, r0
     fb4:	81 1d       	adc	r24, r1
     fb6:	11 24       	eor	r1, r1
     fb8:	91 1d       	adc	r25, r1
     fba:	08 95       	ret

00000fbc <sprintf>:
     fbc:	ae e0       	ldi	r26, 0x0E	; 14
     fbe:	b0 e0       	ldi	r27, 0x00	; 0
     fc0:	e4 ee       	ldi	r30, 0xE4	; 228
     fc2:	f7 e0       	ldi	r31, 0x07	; 7
     fc4:	0c 94 9f 0a 	jmp	0x153e	; 0x153e <__prologue_saves__+0x1c>
     fc8:	0d 89       	ldd	r16, Y+21	; 0x15
     fca:	1e 89       	ldd	r17, Y+22	; 0x16
     fcc:	86 e0       	ldi	r24, 0x06	; 6
     fce:	8c 83       	std	Y+4, r24	; 0x04
     fd0:	1a 83       	std	Y+2, r17	; 0x02
     fd2:	09 83       	std	Y+1, r16	; 0x01
     fd4:	8f ef       	ldi	r24, 0xFF	; 255
     fd6:	9f e7       	ldi	r25, 0x7F	; 127
     fd8:	9e 83       	std	Y+6, r25	; 0x06
     fda:	8d 83       	std	Y+5, r24	; 0x05
     fdc:	ae 01       	movw	r20, r28
     fde:	47 5e       	subi	r20, 0xE7	; 231
     fe0:	5f 4f       	sbci	r21, 0xFF	; 255
     fe2:	6f 89       	ldd	r22, Y+23	; 0x17
     fe4:	78 8d       	ldd	r23, Y+24	; 0x18
     fe6:	ce 01       	movw	r24, r28
     fe8:	01 96       	adiw	r24, 0x01	; 1
     fea:	0e 94 00 08 	call	0x1000	; 0x1000 <vfprintf>
     fee:	ef 81       	ldd	r30, Y+7	; 0x07
     ff0:	f8 85       	ldd	r31, Y+8	; 0x08
     ff2:	e0 0f       	add	r30, r16
     ff4:	f1 1f       	adc	r31, r17
     ff6:	10 82       	st	Z, r1
     ff8:	2e 96       	adiw	r28, 0x0e	; 14
     ffa:	e4 e0       	ldi	r30, 0x04	; 4
     ffc:	0c 94 bb 0a 	jmp	0x1576	; 0x1576 <__epilogue_restores__+0x1c>

00001000 <vfprintf>:
    1000:	ab e0       	ldi	r26, 0x0B	; 11
    1002:	b0 e0       	ldi	r27, 0x00	; 0
    1004:	e6 e0       	ldi	r30, 0x06	; 6
    1006:	f8 e0       	ldi	r31, 0x08	; 8
    1008:	0c 94 91 0a 	jmp	0x1522	; 0x1522 <__prologue_saves__>
    100c:	6c 01       	movw	r12, r24
    100e:	7b 01       	movw	r14, r22
    1010:	8a 01       	movw	r16, r20
    1012:	fc 01       	movw	r30, r24
    1014:	17 82       	std	Z+7, r1	; 0x07
    1016:	16 82       	std	Z+6, r1	; 0x06
    1018:	83 81       	ldd	r24, Z+3	; 0x03
    101a:	81 ff       	sbrs	r24, 1
    101c:	cc c1       	rjmp	.+920    	; 0x13b6 <vfprintf+0x3b6>
    101e:	ce 01       	movw	r24, r28
    1020:	01 96       	adiw	r24, 0x01	; 1
    1022:	3c 01       	movw	r6, r24
    1024:	f6 01       	movw	r30, r12
    1026:	93 81       	ldd	r25, Z+3	; 0x03
    1028:	f7 01       	movw	r30, r14
    102a:	93 fd       	sbrc	r25, 3
    102c:	85 91       	lpm	r24, Z+
    102e:	93 ff       	sbrs	r25, 3
    1030:	81 91       	ld	r24, Z+
    1032:	7f 01       	movw	r14, r30
    1034:	88 23       	and	r24, r24
    1036:	09 f4       	brne	.+2      	; 0x103a <vfprintf+0x3a>
    1038:	ba c1       	rjmp	.+884    	; 0x13ae <vfprintf+0x3ae>
    103a:	85 32       	cpi	r24, 0x25	; 37
    103c:	39 f4       	brne	.+14     	; 0x104c <vfprintf+0x4c>
    103e:	93 fd       	sbrc	r25, 3
    1040:	85 91       	lpm	r24, Z+
    1042:	93 ff       	sbrs	r25, 3
    1044:	81 91       	ld	r24, Z+
    1046:	7f 01       	movw	r14, r30
    1048:	85 32       	cpi	r24, 0x25	; 37
    104a:	29 f4       	brne	.+10     	; 0x1056 <vfprintf+0x56>
    104c:	b6 01       	movw	r22, r12
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	0e 94 f7 09 	call	0x13ee	; 0x13ee <fputc>
    1054:	e7 cf       	rjmp	.-50     	; 0x1024 <vfprintf+0x24>
    1056:	91 2c       	mov	r9, r1
    1058:	21 2c       	mov	r2, r1
    105a:	31 2c       	mov	r3, r1
    105c:	ff e1       	ldi	r31, 0x1F	; 31
    105e:	f3 15       	cp	r31, r3
    1060:	d8 f0       	brcs	.+54     	; 0x1098 <vfprintf+0x98>
    1062:	8b 32       	cpi	r24, 0x2B	; 43
    1064:	79 f0       	breq	.+30     	; 0x1084 <vfprintf+0x84>
    1066:	38 f4       	brcc	.+14     	; 0x1076 <vfprintf+0x76>
    1068:	80 32       	cpi	r24, 0x20	; 32
    106a:	79 f0       	breq	.+30     	; 0x108a <vfprintf+0x8a>
    106c:	83 32       	cpi	r24, 0x23	; 35
    106e:	a1 f4       	brne	.+40     	; 0x1098 <vfprintf+0x98>
    1070:	23 2d       	mov	r18, r3
    1072:	20 61       	ori	r18, 0x10	; 16
    1074:	1d c0       	rjmp	.+58     	; 0x10b0 <vfprintf+0xb0>
    1076:	8d 32       	cpi	r24, 0x2D	; 45
    1078:	61 f0       	breq	.+24     	; 0x1092 <vfprintf+0x92>
    107a:	80 33       	cpi	r24, 0x30	; 48
    107c:	69 f4       	brne	.+26     	; 0x1098 <vfprintf+0x98>
    107e:	23 2d       	mov	r18, r3
    1080:	21 60       	ori	r18, 0x01	; 1
    1082:	16 c0       	rjmp	.+44     	; 0x10b0 <vfprintf+0xb0>
    1084:	83 2d       	mov	r24, r3
    1086:	82 60       	ori	r24, 0x02	; 2
    1088:	38 2e       	mov	r3, r24
    108a:	e3 2d       	mov	r30, r3
    108c:	e4 60       	ori	r30, 0x04	; 4
    108e:	3e 2e       	mov	r3, r30
    1090:	2a c0       	rjmp	.+84     	; 0x10e6 <vfprintf+0xe6>
    1092:	f3 2d       	mov	r31, r3
    1094:	f8 60       	ori	r31, 0x08	; 8
    1096:	1d c0       	rjmp	.+58     	; 0x10d2 <vfprintf+0xd2>
    1098:	37 fc       	sbrc	r3, 7
    109a:	2d c0       	rjmp	.+90     	; 0x10f6 <vfprintf+0xf6>
    109c:	20 ed       	ldi	r18, 0xD0	; 208
    109e:	28 0f       	add	r18, r24
    10a0:	2a 30       	cpi	r18, 0x0A	; 10
    10a2:	40 f0       	brcs	.+16     	; 0x10b4 <vfprintf+0xb4>
    10a4:	8e 32       	cpi	r24, 0x2E	; 46
    10a6:	b9 f4       	brne	.+46     	; 0x10d6 <vfprintf+0xd6>
    10a8:	36 fc       	sbrc	r3, 6
    10aa:	81 c1       	rjmp	.+770    	; 0x13ae <vfprintf+0x3ae>
    10ac:	23 2d       	mov	r18, r3
    10ae:	20 64       	ori	r18, 0x40	; 64
    10b0:	32 2e       	mov	r3, r18
    10b2:	19 c0       	rjmp	.+50     	; 0x10e6 <vfprintf+0xe6>
    10b4:	36 fe       	sbrs	r3, 6
    10b6:	06 c0       	rjmp	.+12     	; 0x10c4 <vfprintf+0xc4>
    10b8:	8a e0       	ldi	r24, 0x0A	; 10
    10ba:	98 9e       	mul	r9, r24
    10bc:	20 0d       	add	r18, r0
    10be:	11 24       	eor	r1, r1
    10c0:	92 2e       	mov	r9, r18
    10c2:	11 c0       	rjmp	.+34     	; 0x10e6 <vfprintf+0xe6>
    10c4:	ea e0       	ldi	r30, 0x0A	; 10
    10c6:	2e 9e       	mul	r2, r30
    10c8:	20 0d       	add	r18, r0
    10ca:	11 24       	eor	r1, r1
    10cc:	22 2e       	mov	r2, r18
    10ce:	f3 2d       	mov	r31, r3
    10d0:	f0 62       	ori	r31, 0x20	; 32
    10d2:	3f 2e       	mov	r3, r31
    10d4:	08 c0       	rjmp	.+16     	; 0x10e6 <vfprintf+0xe6>
    10d6:	8c 36       	cpi	r24, 0x6C	; 108
    10d8:	21 f4       	brne	.+8      	; 0x10e2 <vfprintf+0xe2>
    10da:	83 2d       	mov	r24, r3
    10dc:	80 68       	ori	r24, 0x80	; 128
    10de:	38 2e       	mov	r3, r24
    10e0:	02 c0       	rjmp	.+4      	; 0x10e6 <vfprintf+0xe6>
    10e2:	88 36       	cpi	r24, 0x68	; 104
    10e4:	41 f4       	brne	.+16     	; 0x10f6 <vfprintf+0xf6>
    10e6:	f7 01       	movw	r30, r14
    10e8:	93 fd       	sbrc	r25, 3
    10ea:	85 91       	lpm	r24, Z+
    10ec:	93 ff       	sbrs	r25, 3
    10ee:	81 91       	ld	r24, Z+
    10f0:	7f 01       	movw	r14, r30
    10f2:	81 11       	cpse	r24, r1
    10f4:	b3 cf       	rjmp	.-154    	; 0x105c <vfprintf+0x5c>
    10f6:	98 2f       	mov	r25, r24
    10f8:	9f 7d       	andi	r25, 0xDF	; 223
    10fa:	95 54       	subi	r25, 0x45	; 69
    10fc:	93 30       	cpi	r25, 0x03	; 3
    10fe:	28 f4       	brcc	.+10     	; 0x110a <vfprintf+0x10a>
    1100:	0c 5f       	subi	r16, 0xFC	; 252
    1102:	1f 4f       	sbci	r17, 0xFF	; 255
    1104:	9f e3       	ldi	r25, 0x3F	; 63
    1106:	99 83       	std	Y+1, r25	; 0x01
    1108:	0d c0       	rjmp	.+26     	; 0x1124 <vfprintf+0x124>
    110a:	83 36       	cpi	r24, 0x63	; 99
    110c:	31 f0       	breq	.+12     	; 0x111a <vfprintf+0x11a>
    110e:	83 37       	cpi	r24, 0x73	; 115
    1110:	71 f0       	breq	.+28     	; 0x112e <vfprintf+0x12e>
    1112:	83 35       	cpi	r24, 0x53	; 83
    1114:	09 f0       	breq	.+2      	; 0x1118 <vfprintf+0x118>
    1116:	59 c0       	rjmp	.+178    	; 0x11ca <vfprintf+0x1ca>
    1118:	21 c0       	rjmp	.+66     	; 0x115c <vfprintf+0x15c>
    111a:	f8 01       	movw	r30, r16
    111c:	80 81       	ld	r24, Z
    111e:	89 83       	std	Y+1, r24	; 0x01
    1120:	0e 5f       	subi	r16, 0xFE	; 254
    1122:	1f 4f       	sbci	r17, 0xFF	; 255
    1124:	88 24       	eor	r8, r8
    1126:	83 94       	inc	r8
    1128:	91 2c       	mov	r9, r1
    112a:	53 01       	movw	r10, r6
    112c:	13 c0       	rjmp	.+38     	; 0x1154 <vfprintf+0x154>
    112e:	28 01       	movw	r4, r16
    1130:	f2 e0       	ldi	r31, 0x02	; 2
    1132:	4f 0e       	add	r4, r31
    1134:	51 1c       	adc	r5, r1
    1136:	f8 01       	movw	r30, r16
    1138:	a0 80       	ld	r10, Z
    113a:	b1 80       	ldd	r11, Z+1	; 0x01
    113c:	36 fe       	sbrs	r3, 6
    113e:	03 c0       	rjmp	.+6      	; 0x1146 <vfprintf+0x146>
    1140:	69 2d       	mov	r22, r9
    1142:	70 e0       	ldi	r23, 0x00	; 0
    1144:	02 c0       	rjmp	.+4      	; 0x114a <vfprintf+0x14a>
    1146:	6f ef       	ldi	r22, 0xFF	; 255
    1148:	7f ef       	ldi	r23, 0xFF	; 255
    114a:	c5 01       	movw	r24, r10
    114c:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <strnlen>
    1150:	4c 01       	movw	r8, r24
    1152:	82 01       	movw	r16, r4
    1154:	f3 2d       	mov	r31, r3
    1156:	ff 77       	andi	r31, 0x7F	; 127
    1158:	3f 2e       	mov	r3, r31
    115a:	16 c0       	rjmp	.+44     	; 0x1188 <vfprintf+0x188>
    115c:	28 01       	movw	r4, r16
    115e:	22 e0       	ldi	r18, 0x02	; 2
    1160:	42 0e       	add	r4, r18
    1162:	51 1c       	adc	r5, r1
    1164:	f8 01       	movw	r30, r16
    1166:	a0 80       	ld	r10, Z
    1168:	b1 80       	ldd	r11, Z+1	; 0x01
    116a:	36 fe       	sbrs	r3, 6
    116c:	03 c0       	rjmp	.+6      	; 0x1174 <vfprintf+0x174>
    116e:	69 2d       	mov	r22, r9
    1170:	70 e0       	ldi	r23, 0x00	; 0
    1172:	02 c0       	rjmp	.+4      	; 0x1178 <vfprintf+0x178>
    1174:	6f ef       	ldi	r22, 0xFF	; 255
    1176:	7f ef       	ldi	r23, 0xFF	; 255
    1178:	c5 01       	movw	r24, r10
    117a:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <strnlen_P>
    117e:	4c 01       	movw	r8, r24
    1180:	f3 2d       	mov	r31, r3
    1182:	f0 68       	ori	r31, 0x80	; 128
    1184:	3f 2e       	mov	r3, r31
    1186:	82 01       	movw	r16, r4
    1188:	33 fc       	sbrc	r3, 3
    118a:	1b c0       	rjmp	.+54     	; 0x11c2 <vfprintf+0x1c2>
    118c:	82 2d       	mov	r24, r2
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	88 16       	cp	r8, r24
    1192:	99 06       	cpc	r9, r25
    1194:	b0 f4       	brcc	.+44     	; 0x11c2 <vfprintf+0x1c2>
    1196:	b6 01       	movw	r22, r12
    1198:	80 e2       	ldi	r24, 0x20	; 32
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	0e 94 f7 09 	call	0x13ee	; 0x13ee <fputc>
    11a0:	2a 94       	dec	r2
    11a2:	f4 cf       	rjmp	.-24     	; 0x118c <vfprintf+0x18c>
    11a4:	f5 01       	movw	r30, r10
    11a6:	37 fc       	sbrc	r3, 7
    11a8:	85 91       	lpm	r24, Z+
    11aa:	37 fe       	sbrs	r3, 7
    11ac:	81 91       	ld	r24, Z+
    11ae:	5f 01       	movw	r10, r30
    11b0:	b6 01       	movw	r22, r12
    11b2:	90 e0       	ldi	r25, 0x00	; 0
    11b4:	0e 94 f7 09 	call	0x13ee	; 0x13ee <fputc>
    11b8:	21 10       	cpse	r2, r1
    11ba:	2a 94       	dec	r2
    11bc:	21 e0       	ldi	r18, 0x01	; 1
    11be:	82 1a       	sub	r8, r18
    11c0:	91 08       	sbc	r9, r1
    11c2:	81 14       	cp	r8, r1
    11c4:	91 04       	cpc	r9, r1
    11c6:	71 f7       	brne	.-36     	; 0x11a4 <vfprintf+0x1a4>
    11c8:	e8 c0       	rjmp	.+464    	; 0x139a <vfprintf+0x39a>
    11ca:	84 36       	cpi	r24, 0x64	; 100
    11cc:	11 f0       	breq	.+4      	; 0x11d2 <vfprintf+0x1d2>
    11ce:	89 36       	cpi	r24, 0x69	; 105
    11d0:	41 f5       	brne	.+80     	; 0x1222 <vfprintf+0x222>
    11d2:	f8 01       	movw	r30, r16
    11d4:	37 fe       	sbrs	r3, 7
    11d6:	07 c0       	rjmp	.+14     	; 0x11e6 <vfprintf+0x1e6>
    11d8:	60 81       	ld	r22, Z
    11da:	71 81       	ldd	r23, Z+1	; 0x01
    11dc:	82 81       	ldd	r24, Z+2	; 0x02
    11de:	93 81       	ldd	r25, Z+3	; 0x03
    11e0:	0c 5f       	subi	r16, 0xFC	; 252
    11e2:	1f 4f       	sbci	r17, 0xFF	; 255
    11e4:	08 c0       	rjmp	.+16     	; 0x11f6 <vfprintf+0x1f6>
    11e6:	60 81       	ld	r22, Z
    11e8:	71 81       	ldd	r23, Z+1	; 0x01
    11ea:	07 2e       	mov	r0, r23
    11ec:	00 0c       	add	r0, r0
    11ee:	88 0b       	sbc	r24, r24
    11f0:	99 0b       	sbc	r25, r25
    11f2:	0e 5f       	subi	r16, 0xFE	; 254
    11f4:	1f 4f       	sbci	r17, 0xFF	; 255
    11f6:	f3 2d       	mov	r31, r3
    11f8:	ff 76       	andi	r31, 0x6F	; 111
    11fa:	3f 2e       	mov	r3, r31
    11fc:	97 ff       	sbrs	r25, 7
    11fe:	09 c0       	rjmp	.+18     	; 0x1212 <vfprintf+0x212>
    1200:	90 95       	com	r25
    1202:	80 95       	com	r24
    1204:	70 95       	com	r23
    1206:	61 95       	neg	r22
    1208:	7f 4f       	sbci	r23, 0xFF	; 255
    120a:	8f 4f       	sbci	r24, 0xFF	; 255
    120c:	9f 4f       	sbci	r25, 0xFF	; 255
    120e:	f0 68       	ori	r31, 0x80	; 128
    1210:	3f 2e       	mov	r3, r31
    1212:	2a e0       	ldi	r18, 0x0A	; 10
    1214:	30 e0       	ldi	r19, 0x00	; 0
    1216:	a3 01       	movw	r20, r6
    1218:	0e 94 33 0a 	call	0x1466	; 0x1466 <__ultoa_invert>
    121c:	88 2e       	mov	r8, r24
    121e:	86 18       	sub	r8, r6
    1220:	45 c0       	rjmp	.+138    	; 0x12ac <vfprintf+0x2ac>
    1222:	85 37       	cpi	r24, 0x75	; 117
    1224:	31 f4       	brne	.+12     	; 0x1232 <vfprintf+0x232>
    1226:	23 2d       	mov	r18, r3
    1228:	2f 7e       	andi	r18, 0xEF	; 239
    122a:	b2 2e       	mov	r11, r18
    122c:	2a e0       	ldi	r18, 0x0A	; 10
    122e:	30 e0       	ldi	r19, 0x00	; 0
    1230:	25 c0       	rjmp	.+74     	; 0x127c <vfprintf+0x27c>
    1232:	93 2d       	mov	r25, r3
    1234:	99 7f       	andi	r25, 0xF9	; 249
    1236:	b9 2e       	mov	r11, r25
    1238:	8f 36       	cpi	r24, 0x6F	; 111
    123a:	c1 f0       	breq	.+48     	; 0x126c <vfprintf+0x26c>
    123c:	18 f4       	brcc	.+6      	; 0x1244 <vfprintf+0x244>
    123e:	88 35       	cpi	r24, 0x58	; 88
    1240:	79 f0       	breq	.+30     	; 0x1260 <vfprintf+0x260>
    1242:	b5 c0       	rjmp	.+362    	; 0x13ae <vfprintf+0x3ae>
    1244:	80 37       	cpi	r24, 0x70	; 112
    1246:	19 f0       	breq	.+6      	; 0x124e <vfprintf+0x24e>
    1248:	88 37       	cpi	r24, 0x78	; 120
    124a:	21 f0       	breq	.+8      	; 0x1254 <vfprintf+0x254>
    124c:	b0 c0       	rjmp	.+352    	; 0x13ae <vfprintf+0x3ae>
    124e:	e9 2f       	mov	r30, r25
    1250:	e0 61       	ori	r30, 0x10	; 16
    1252:	be 2e       	mov	r11, r30
    1254:	b4 fe       	sbrs	r11, 4
    1256:	0d c0       	rjmp	.+26     	; 0x1272 <vfprintf+0x272>
    1258:	fb 2d       	mov	r31, r11
    125a:	f4 60       	ori	r31, 0x04	; 4
    125c:	bf 2e       	mov	r11, r31
    125e:	09 c0       	rjmp	.+18     	; 0x1272 <vfprintf+0x272>
    1260:	34 fe       	sbrs	r3, 4
    1262:	0a c0       	rjmp	.+20     	; 0x1278 <vfprintf+0x278>
    1264:	29 2f       	mov	r18, r25
    1266:	26 60       	ori	r18, 0x06	; 6
    1268:	b2 2e       	mov	r11, r18
    126a:	06 c0       	rjmp	.+12     	; 0x1278 <vfprintf+0x278>
    126c:	28 e0       	ldi	r18, 0x08	; 8
    126e:	30 e0       	ldi	r19, 0x00	; 0
    1270:	05 c0       	rjmp	.+10     	; 0x127c <vfprintf+0x27c>
    1272:	20 e1       	ldi	r18, 0x10	; 16
    1274:	30 e0       	ldi	r19, 0x00	; 0
    1276:	02 c0       	rjmp	.+4      	; 0x127c <vfprintf+0x27c>
    1278:	20 e1       	ldi	r18, 0x10	; 16
    127a:	32 e0       	ldi	r19, 0x02	; 2
    127c:	f8 01       	movw	r30, r16
    127e:	b7 fe       	sbrs	r11, 7
    1280:	07 c0       	rjmp	.+14     	; 0x1290 <vfprintf+0x290>
    1282:	60 81       	ld	r22, Z
    1284:	71 81       	ldd	r23, Z+1	; 0x01
    1286:	82 81       	ldd	r24, Z+2	; 0x02
    1288:	93 81       	ldd	r25, Z+3	; 0x03
    128a:	0c 5f       	subi	r16, 0xFC	; 252
    128c:	1f 4f       	sbci	r17, 0xFF	; 255
    128e:	06 c0       	rjmp	.+12     	; 0x129c <vfprintf+0x29c>
    1290:	60 81       	ld	r22, Z
    1292:	71 81       	ldd	r23, Z+1	; 0x01
    1294:	80 e0       	ldi	r24, 0x00	; 0
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	0e 5f       	subi	r16, 0xFE	; 254
    129a:	1f 4f       	sbci	r17, 0xFF	; 255
    129c:	a3 01       	movw	r20, r6
    129e:	0e 94 33 0a 	call	0x1466	; 0x1466 <__ultoa_invert>
    12a2:	88 2e       	mov	r8, r24
    12a4:	86 18       	sub	r8, r6
    12a6:	fb 2d       	mov	r31, r11
    12a8:	ff 77       	andi	r31, 0x7F	; 127
    12aa:	3f 2e       	mov	r3, r31
    12ac:	36 fe       	sbrs	r3, 6
    12ae:	0d c0       	rjmp	.+26     	; 0x12ca <vfprintf+0x2ca>
    12b0:	23 2d       	mov	r18, r3
    12b2:	2e 7f       	andi	r18, 0xFE	; 254
    12b4:	a2 2e       	mov	r10, r18
    12b6:	89 14       	cp	r8, r9
    12b8:	58 f4       	brcc	.+22     	; 0x12d0 <vfprintf+0x2d0>
    12ba:	34 fe       	sbrs	r3, 4
    12bc:	0b c0       	rjmp	.+22     	; 0x12d4 <vfprintf+0x2d4>
    12be:	32 fc       	sbrc	r3, 2
    12c0:	09 c0       	rjmp	.+18     	; 0x12d4 <vfprintf+0x2d4>
    12c2:	83 2d       	mov	r24, r3
    12c4:	8e 7e       	andi	r24, 0xEE	; 238
    12c6:	a8 2e       	mov	r10, r24
    12c8:	05 c0       	rjmp	.+10     	; 0x12d4 <vfprintf+0x2d4>
    12ca:	b8 2c       	mov	r11, r8
    12cc:	a3 2c       	mov	r10, r3
    12ce:	03 c0       	rjmp	.+6      	; 0x12d6 <vfprintf+0x2d6>
    12d0:	b8 2c       	mov	r11, r8
    12d2:	01 c0       	rjmp	.+2      	; 0x12d6 <vfprintf+0x2d6>
    12d4:	b9 2c       	mov	r11, r9
    12d6:	a4 fe       	sbrs	r10, 4
    12d8:	0f c0       	rjmp	.+30     	; 0x12f8 <vfprintf+0x2f8>
    12da:	fe 01       	movw	r30, r28
    12dc:	e8 0d       	add	r30, r8
    12de:	f1 1d       	adc	r31, r1
    12e0:	80 81       	ld	r24, Z
    12e2:	80 33       	cpi	r24, 0x30	; 48
    12e4:	21 f4       	brne	.+8      	; 0x12ee <vfprintf+0x2ee>
    12e6:	9a 2d       	mov	r25, r10
    12e8:	99 7e       	andi	r25, 0xE9	; 233
    12ea:	a9 2e       	mov	r10, r25
    12ec:	09 c0       	rjmp	.+18     	; 0x1300 <vfprintf+0x300>
    12ee:	a2 fe       	sbrs	r10, 2
    12f0:	06 c0       	rjmp	.+12     	; 0x12fe <vfprintf+0x2fe>
    12f2:	b3 94       	inc	r11
    12f4:	b3 94       	inc	r11
    12f6:	04 c0       	rjmp	.+8      	; 0x1300 <vfprintf+0x300>
    12f8:	8a 2d       	mov	r24, r10
    12fa:	86 78       	andi	r24, 0x86	; 134
    12fc:	09 f0       	breq	.+2      	; 0x1300 <vfprintf+0x300>
    12fe:	b3 94       	inc	r11
    1300:	a3 fc       	sbrc	r10, 3
    1302:	11 c0       	rjmp	.+34     	; 0x1326 <vfprintf+0x326>
    1304:	a0 fe       	sbrs	r10, 0
    1306:	06 c0       	rjmp	.+12     	; 0x1314 <vfprintf+0x314>
    1308:	b2 14       	cp	r11, r2
    130a:	88 f4       	brcc	.+34     	; 0x132e <vfprintf+0x32e>
    130c:	28 0c       	add	r2, r8
    130e:	92 2c       	mov	r9, r2
    1310:	9b 18       	sub	r9, r11
    1312:	0e c0       	rjmp	.+28     	; 0x1330 <vfprintf+0x330>
    1314:	b2 14       	cp	r11, r2
    1316:	60 f4       	brcc	.+24     	; 0x1330 <vfprintf+0x330>
    1318:	b6 01       	movw	r22, r12
    131a:	80 e2       	ldi	r24, 0x20	; 32
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	0e 94 f7 09 	call	0x13ee	; 0x13ee <fputc>
    1322:	b3 94       	inc	r11
    1324:	f7 cf       	rjmp	.-18     	; 0x1314 <vfprintf+0x314>
    1326:	b2 14       	cp	r11, r2
    1328:	18 f4       	brcc	.+6      	; 0x1330 <vfprintf+0x330>
    132a:	2b 18       	sub	r2, r11
    132c:	02 c0       	rjmp	.+4      	; 0x1332 <vfprintf+0x332>
    132e:	98 2c       	mov	r9, r8
    1330:	21 2c       	mov	r2, r1
    1332:	a4 fe       	sbrs	r10, 4
    1334:	10 c0       	rjmp	.+32     	; 0x1356 <vfprintf+0x356>
    1336:	b6 01       	movw	r22, r12
    1338:	80 e3       	ldi	r24, 0x30	; 48
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	0e 94 f7 09 	call	0x13ee	; 0x13ee <fputc>
    1340:	a2 fe       	sbrs	r10, 2
    1342:	17 c0       	rjmp	.+46     	; 0x1372 <vfprintf+0x372>
    1344:	a1 fc       	sbrc	r10, 1
    1346:	03 c0       	rjmp	.+6      	; 0x134e <vfprintf+0x34e>
    1348:	88 e7       	ldi	r24, 0x78	; 120
    134a:	90 e0       	ldi	r25, 0x00	; 0
    134c:	02 c0       	rjmp	.+4      	; 0x1352 <vfprintf+0x352>
    134e:	88 e5       	ldi	r24, 0x58	; 88
    1350:	90 e0       	ldi	r25, 0x00	; 0
    1352:	b6 01       	movw	r22, r12
    1354:	0c c0       	rjmp	.+24     	; 0x136e <vfprintf+0x36e>
    1356:	8a 2d       	mov	r24, r10
    1358:	86 78       	andi	r24, 0x86	; 134
    135a:	59 f0       	breq	.+22     	; 0x1372 <vfprintf+0x372>
    135c:	a1 fe       	sbrs	r10, 1
    135e:	02 c0       	rjmp	.+4      	; 0x1364 <vfprintf+0x364>
    1360:	8b e2       	ldi	r24, 0x2B	; 43
    1362:	01 c0       	rjmp	.+2      	; 0x1366 <vfprintf+0x366>
    1364:	80 e2       	ldi	r24, 0x20	; 32
    1366:	a7 fc       	sbrc	r10, 7
    1368:	8d e2       	ldi	r24, 0x2D	; 45
    136a:	b6 01       	movw	r22, r12
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	0e 94 f7 09 	call	0x13ee	; 0x13ee <fputc>
    1372:	89 14       	cp	r8, r9
    1374:	38 f4       	brcc	.+14     	; 0x1384 <vfprintf+0x384>
    1376:	b6 01       	movw	r22, r12
    1378:	80 e3       	ldi	r24, 0x30	; 48
    137a:	90 e0       	ldi	r25, 0x00	; 0
    137c:	0e 94 f7 09 	call	0x13ee	; 0x13ee <fputc>
    1380:	9a 94       	dec	r9
    1382:	f7 cf       	rjmp	.-18     	; 0x1372 <vfprintf+0x372>
    1384:	8a 94       	dec	r8
    1386:	f3 01       	movw	r30, r6
    1388:	e8 0d       	add	r30, r8
    138a:	f1 1d       	adc	r31, r1
    138c:	80 81       	ld	r24, Z
    138e:	b6 01       	movw	r22, r12
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	0e 94 f7 09 	call	0x13ee	; 0x13ee <fputc>
    1396:	81 10       	cpse	r8, r1
    1398:	f5 cf       	rjmp	.-22     	; 0x1384 <vfprintf+0x384>
    139a:	22 20       	and	r2, r2
    139c:	09 f4       	brne	.+2      	; 0x13a0 <vfprintf+0x3a0>
    139e:	42 ce       	rjmp	.-892    	; 0x1024 <vfprintf+0x24>
    13a0:	b6 01       	movw	r22, r12
    13a2:	80 e2       	ldi	r24, 0x20	; 32
    13a4:	90 e0       	ldi	r25, 0x00	; 0
    13a6:	0e 94 f7 09 	call	0x13ee	; 0x13ee <fputc>
    13aa:	2a 94       	dec	r2
    13ac:	f6 cf       	rjmp	.-20     	; 0x139a <vfprintf+0x39a>
    13ae:	f6 01       	movw	r30, r12
    13b0:	86 81       	ldd	r24, Z+6	; 0x06
    13b2:	97 81       	ldd	r25, Z+7	; 0x07
    13b4:	02 c0       	rjmp	.+4      	; 0x13ba <vfprintf+0x3ba>
    13b6:	8f ef       	ldi	r24, 0xFF	; 255
    13b8:	9f ef       	ldi	r25, 0xFF	; 255
    13ba:	2b 96       	adiw	r28, 0x0b	; 11
    13bc:	e2 e1       	ldi	r30, 0x12	; 18
    13be:	0c 94 ad 0a 	jmp	0x155a	; 0x155a <__epilogue_restores__>

000013c2 <strnlen_P>:
    13c2:	fc 01       	movw	r30, r24
    13c4:	05 90       	lpm	r0, Z+
    13c6:	61 50       	subi	r22, 0x01	; 1
    13c8:	70 40       	sbci	r23, 0x00	; 0
    13ca:	01 10       	cpse	r0, r1
    13cc:	d8 f7       	brcc	.-10     	; 0x13c4 <strnlen_P+0x2>
    13ce:	80 95       	com	r24
    13d0:	90 95       	com	r25
    13d2:	8e 0f       	add	r24, r30
    13d4:	9f 1f       	adc	r25, r31
    13d6:	08 95       	ret

000013d8 <strnlen>:
    13d8:	fc 01       	movw	r30, r24
    13da:	61 50       	subi	r22, 0x01	; 1
    13dc:	70 40       	sbci	r23, 0x00	; 0
    13de:	01 90       	ld	r0, Z+
    13e0:	01 10       	cpse	r0, r1
    13e2:	d8 f7       	brcc	.-10     	; 0x13da <strnlen+0x2>
    13e4:	80 95       	com	r24
    13e6:	90 95       	com	r25
    13e8:	8e 0f       	add	r24, r30
    13ea:	9f 1f       	adc	r25, r31
    13ec:	08 95       	ret

000013ee <fputc>:
    13ee:	0f 93       	push	r16
    13f0:	1f 93       	push	r17
    13f2:	cf 93       	push	r28
    13f4:	df 93       	push	r29
    13f6:	fb 01       	movw	r30, r22
    13f8:	23 81       	ldd	r18, Z+3	; 0x03
    13fa:	21 fd       	sbrc	r18, 1
    13fc:	03 c0       	rjmp	.+6      	; 0x1404 <fputc+0x16>
    13fe:	8f ef       	ldi	r24, 0xFF	; 255
    1400:	9f ef       	ldi	r25, 0xFF	; 255
    1402:	2c c0       	rjmp	.+88     	; 0x145c <fputc+0x6e>
    1404:	22 ff       	sbrs	r18, 2
    1406:	16 c0       	rjmp	.+44     	; 0x1434 <fputc+0x46>
    1408:	46 81       	ldd	r20, Z+6	; 0x06
    140a:	57 81       	ldd	r21, Z+7	; 0x07
    140c:	24 81       	ldd	r18, Z+4	; 0x04
    140e:	35 81       	ldd	r19, Z+5	; 0x05
    1410:	42 17       	cp	r20, r18
    1412:	53 07       	cpc	r21, r19
    1414:	44 f4       	brge	.+16     	; 0x1426 <fputc+0x38>
    1416:	a0 81       	ld	r26, Z
    1418:	b1 81       	ldd	r27, Z+1	; 0x01
    141a:	9d 01       	movw	r18, r26
    141c:	2f 5f       	subi	r18, 0xFF	; 255
    141e:	3f 4f       	sbci	r19, 0xFF	; 255
    1420:	31 83       	std	Z+1, r19	; 0x01
    1422:	20 83       	st	Z, r18
    1424:	8c 93       	st	X, r24
    1426:	26 81       	ldd	r18, Z+6	; 0x06
    1428:	37 81       	ldd	r19, Z+7	; 0x07
    142a:	2f 5f       	subi	r18, 0xFF	; 255
    142c:	3f 4f       	sbci	r19, 0xFF	; 255
    142e:	37 83       	std	Z+7, r19	; 0x07
    1430:	26 83       	std	Z+6, r18	; 0x06
    1432:	14 c0       	rjmp	.+40     	; 0x145c <fputc+0x6e>
    1434:	8b 01       	movw	r16, r22
    1436:	ec 01       	movw	r28, r24
    1438:	fb 01       	movw	r30, r22
    143a:	00 84       	ldd	r0, Z+8	; 0x08
    143c:	f1 85       	ldd	r31, Z+9	; 0x09
    143e:	e0 2d       	mov	r30, r0
    1440:	09 95       	icall
    1442:	89 2b       	or	r24, r25
    1444:	e1 f6       	brne	.-72     	; 0x13fe <fputc+0x10>
    1446:	d8 01       	movw	r26, r16
    1448:	16 96       	adiw	r26, 0x06	; 6
    144a:	8d 91       	ld	r24, X+
    144c:	9c 91       	ld	r25, X
    144e:	17 97       	sbiw	r26, 0x07	; 7
    1450:	01 96       	adiw	r24, 0x01	; 1
    1452:	17 96       	adiw	r26, 0x07	; 7
    1454:	9c 93       	st	X, r25
    1456:	8e 93       	st	-X, r24
    1458:	16 97       	sbiw	r26, 0x06	; 6
    145a:	ce 01       	movw	r24, r28
    145c:	df 91       	pop	r29
    145e:	cf 91       	pop	r28
    1460:	1f 91       	pop	r17
    1462:	0f 91       	pop	r16
    1464:	08 95       	ret

00001466 <__ultoa_invert>:
    1466:	fa 01       	movw	r30, r20
    1468:	aa 27       	eor	r26, r26
    146a:	28 30       	cpi	r18, 0x08	; 8
    146c:	51 f1       	breq	.+84     	; 0x14c2 <__ultoa_invert+0x5c>
    146e:	20 31       	cpi	r18, 0x10	; 16
    1470:	81 f1       	breq	.+96     	; 0x14d2 <__ultoa_invert+0x6c>
    1472:	e8 94       	clt
    1474:	6f 93       	push	r22
    1476:	6e 7f       	andi	r22, 0xFE	; 254
    1478:	6e 5f       	subi	r22, 0xFE	; 254
    147a:	7f 4f       	sbci	r23, 0xFF	; 255
    147c:	8f 4f       	sbci	r24, 0xFF	; 255
    147e:	9f 4f       	sbci	r25, 0xFF	; 255
    1480:	af 4f       	sbci	r26, 0xFF	; 255
    1482:	b1 e0       	ldi	r27, 0x01	; 1
    1484:	3e d0       	rcall	.+124    	; 0x1502 <__ultoa_invert+0x9c>
    1486:	b4 e0       	ldi	r27, 0x04	; 4
    1488:	3c d0       	rcall	.+120    	; 0x1502 <__ultoa_invert+0x9c>
    148a:	67 0f       	add	r22, r23
    148c:	78 1f       	adc	r23, r24
    148e:	89 1f       	adc	r24, r25
    1490:	9a 1f       	adc	r25, r26
    1492:	a1 1d       	adc	r26, r1
    1494:	68 0f       	add	r22, r24
    1496:	79 1f       	adc	r23, r25
    1498:	8a 1f       	adc	r24, r26
    149a:	91 1d       	adc	r25, r1
    149c:	a1 1d       	adc	r26, r1
    149e:	6a 0f       	add	r22, r26
    14a0:	71 1d       	adc	r23, r1
    14a2:	81 1d       	adc	r24, r1
    14a4:	91 1d       	adc	r25, r1
    14a6:	a1 1d       	adc	r26, r1
    14a8:	20 d0       	rcall	.+64     	; 0x14ea <__ultoa_invert+0x84>
    14aa:	09 f4       	brne	.+2      	; 0x14ae <__ultoa_invert+0x48>
    14ac:	68 94       	set
    14ae:	3f 91       	pop	r19
    14b0:	2a e0       	ldi	r18, 0x0A	; 10
    14b2:	26 9f       	mul	r18, r22
    14b4:	11 24       	eor	r1, r1
    14b6:	30 19       	sub	r19, r0
    14b8:	30 5d       	subi	r19, 0xD0	; 208
    14ba:	31 93       	st	Z+, r19
    14bc:	de f6       	brtc	.-74     	; 0x1474 <__ultoa_invert+0xe>
    14be:	cf 01       	movw	r24, r30
    14c0:	08 95       	ret
    14c2:	46 2f       	mov	r20, r22
    14c4:	47 70       	andi	r20, 0x07	; 7
    14c6:	40 5d       	subi	r20, 0xD0	; 208
    14c8:	41 93       	st	Z+, r20
    14ca:	b3 e0       	ldi	r27, 0x03	; 3
    14cc:	0f d0       	rcall	.+30     	; 0x14ec <__ultoa_invert+0x86>
    14ce:	c9 f7       	brne	.-14     	; 0x14c2 <__ultoa_invert+0x5c>
    14d0:	f6 cf       	rjmp	.-20     	; 0x14be <__ultoa_invert+0x58>
    14d2:	46 2f       	mov	r20, r22
    14d4:	4f 70       	andi	r20, 0x0F	; 15
    14d6:	40 5d       	subi	r20, 0xD0	; 208
    14d8:	4a 33       	cpi	r20, 0x3A	; 58
    14da:	18 f0       	brcs	.+6      	; 0x14e2 <__ultoa_invert+0x7c>
    14dc:	49 5d       	subi	r20, 0xD9	; 217
    14de:	31 fd       	sbrc	r19, 1
    14e0:	40 52       	subi	r20, 0x20	; 32
    14e2:	41 93       	st	Z+, r20
    14e4:	02 d0       	rcall	.+4      	; 0x14ea <__ultoa_invert+0x84>
    14e6:	a9 f7       	brne	.-22     	; 0x14d2 <__ultoa_invert+0x6c>
    14e8:	ea cf       	rjmp	.-44     	; 0x14be <__ultoa_invert+0x58>
    14ea:	b4 e0       	ldi	r27, 0x04	; 4
    14ec:	a6 95       	lsr	r26
    14ee:	97 95       	ror	r25
    14f0:	87 95       	ror	r24
    14f2:	77 95       	ror	r23
    14f4:	67 95       	ror	r22
    14f6:	ba 95       	dec	r27
    14f8:	c9 f7       	brne	.-14     	; 0x14ec <__ultoa_invert+0x86>
    14fa:	00 97       	sbiw	r24, 0x00	; 0
    14fc:	61 05       	cpc	r22, r1
    14fe:	71 05       	cpc	r23, r1
    1500:	08 95       	ret
    1502:	9b 01       	movw	r18, r22
    1504:	ac 01       	movw	r20, r24
    1506:	0a 2e       	mov	r0, r26
    1508:	06 94       	lsr	r0
    150a:	57 95       	ror	r21
    150c:	47 95       	ror	r20
    150e:	37 95       	ror	r19
    1510:	27 95       	ror	r18
    1512:	ba 95       	dec	r27
    1514:	c9 f7       	brne	.-14     	; 0x1508 <__ultoa_invert+0xa2>
    1516:	62 0f       	add	r22, r18
    1518:	73 1f       	adc	r23, r19
    151a:	84 1f       	adc	r24, r20
    151c:	95 1f       	adc	r25, r21
    151e:	a0 1d       	adc	r26, r0
    1520:	08 95       	ret

00001522 <__prologue_saves__>:
    1522:	2f 92       	push	r2
    1524:	3f 92       	push	r3
    1526:	4f 92       	push	r4
    1528:	5f 92       	push	r5
    152a:	6f 92       	push	r6
    152c:	7f 92       	push	r7
    152e:	8f 92       	push	r8
    1530:	9f 92       	push	r9
    1532:	af 92       	push	r10
    1534:	bf 92       	push	r11
    1536:	cf 92       	push	r12
    1538:	df 92       	push	r13
    153a:	ef 92       	push	r14
    153c:	ff 92       	push	r15
    153e:	0f 93       	push	r16
    1540:	1f 93       	push	r17
    1542:	cf 93       	push	r28
    1544:	df 93       	push	r29
    1546:	cd b7       	in	r28, 0x3d	; 61
    1548:	de b7       	in	r29, 0x3e	; 62
    154a:	ca 1b       	sub	r28, r26
    154c:	db 0b       	sbc	r29, r27
    154e:	0f b6       	in	r0, 0x3f	; 63
    1550:	f8 94       	cli
    1552:	de bf       	out	0x3e, r29	; 62
    1554:	0f be       	out	0x3f, r0	; 63
    1556:	cd bf       	out	0x3d, r28	; 61
    1558:	09 94       	ijmp

0000155a <__epilogue_restores__>:
    155a:	2a 88       	ldd	r2, Y+18	; 0x12
    155c:	39 88       	ldd	r3, Y+17	; 0x11
    155e:	48 88       	ldd	r4, Y+16	; 0x10
    1560:	5f 84       	ldd	r5, Y+15	; 0x0f
    1562:	6e 84       	ldd	r6, Y+14	; 0x0e
    1564:	7d 84       	ldd	r7, Y+13	; 0x0d
    1566:	8c 84       	ldd	r8, Y+12	; 0x0c
    1568:	9b 84       	ldd	r9, Y+11	; 0x0b
    156a:	aa 84       	ldd	r10, Y+10	; 0x0a
    156c:	b9 84       	ldd	r11, Y+9	; 0x09
    156e:	c8 84       	ldd	r12, Y+8	; 0x08
    1570:	df 80       	ldd	r13, Y+7	; 0x07
    1572:	ee 80       	ldd	r14, Y+6	; 0x06
    1574:	fd 80       	ldd	r15, Y+5	; 0x05
    1576:	0c 81       	ldd	r16, Y+4	; 0x04
    1578:	1b 81       	ldd	r17, Y+3	; 0x03
    157a:	aa 81       	ldd	r26, Y+2	; 0x02
    157c:	b9 81       	ldd	r27, Y+1	; 0x01
    157e:	ce 0f       	add	r28, r30
    1580:	d1 1d       	adc	r29, r1
    1582:	0f b6       	in	r0, 0x3f	; 63
    1584:	f8 94       	cli
    1586:	de bf       	out	0x3e, r29	; 62
    1588:	0f be       	out	0x3f, r0	; 63
    158a:	cd bf       	out	0x3d, r28	; 61
    158c:	ed 01       	movw	r28, r26
    158e:	08 95       	ret

00001590 <_exit>:
    1590:	f8 94       	cli

00001592 <__stop_program>:
    1592:	ff cf       	rjmp	.-2      	; 0x1592 <__stop_program>
